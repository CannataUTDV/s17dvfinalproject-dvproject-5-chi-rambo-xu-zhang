<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0327.0758                               -->
<workbook source-build='10.1.7 (10100.17.0327.0758)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='Low Fatal Rate' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
        <range granularity='0.10000000000000001' max='0.5' min='0.0' />
      </column>
      <column caption='Medium Fatal Rate' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
        <calculation class='tableau' formula='0.69999999999999996' />
        <range granularity='0.10000000000000001' max='0.69999999999999996' min='0.5' />
      </column>
      <column caption='High Fatal Rate' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
        <calculation class='tableau' formula='0.69999999999999996' />
        <range granularity='0.10000000000000001' max='1.0' min='0.69999999999999996' />
      </column>
    </datasource>
    <datasource caption='&quot;andyzhang/final-project&quot;' inline='true' name='federated.0dseact0pl027i1947yjw1dsk48v' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='&quot;andyzhang/final-project&quot;' name='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri'>
            <connection APIVersion='' authType='none' authentication='no' channel='http' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;andyzhang/final-project&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50Omplbi1jaGkiLCJpc3MiOiJhZ2VudDpqZW4tY2hpOjoyNTFmNWY1NS1jNzU4LTRjZjItYjcyZC0yMWU1NTE5ZDE3ODQiLCJpYXQiOjE0ODQ3MDY4MTgsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.4Sn22xO4wnG8BI7w8IW2foQudOpn9jJ7QynZxBXlkHKaNaCz5Z777ZyrIp2RDPtcIIqvdzb_xhfOZW7lh7O7_Q&quot;}' connectionName='&quot;andyzhang/final-project&quot;' filename='' increment-key='' path='/' port='80' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[MassShooting].[v_4]' />
                <expression op='[LatLong].[v_0]' />
              </expression>
              <expression op='='>
                <expression op='[StateAbbrev].[v_1]' />
                <expression op='[LatLong].[v_1]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[MassShooting].[v_5]' />
                <expression op='[StateAbbrev].[v_0]' />
              </expression>
            </clause>
            <relation connection='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri' name='MassShooting' table='[MassShooting]' type='table' />
            <relation connection='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri' name='StateAbbrev' table='[StateAbbrev]' type='table' />
          </relation>
          <relation connection='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri' name='LatLong' table='[LatLong]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (LatLong)]' value='[LatLong].[v_0]' />
          <map key='[v_0 (StateAbbrev)]' value='[StateAbbrev].[v_0]' />
          <map key='[v_0]' value='[MassShooting].[v_0]' />
          <map key='[v_1 (LatLong)]' value='[LatLong].[v_1]' />
          <map key='[v_1 (StateAbbrev)]' value='[StateAbbrev].[v_1]' />
          <map key='[v_10]' value='[MassShooting].[v_10]' />
          <map key='[v_11]' value='[MassShooting].[v_11]' />
          <map key='[v_12]' value='[MassShooting].[v_12]' />
          <map key='[v_1]' value='[MassShooting].[v_1]' />
          <map key='[v_2 (LatLong)]' value='[LatLong].[v_2]' />
          <map key='[v_2]' value='[MassShooting].[v_2]' />
          <map key='[v_3 (LatLong)]' value='[LatLong].[v_3]' />
          <map key='[v_3]' value='[MassShooting].[v_3]' />
          <map key='[v_4 (LatLong)]' value='[LatLong].[v_4]' />
          <map key='[v_4]' value='[MassShooting].[v_4]' />
          <map key='[v_5]' value='[MassShooting].[v_5]' />
          <map key='[v_6]' value='[MassShooting].[v_6]' />
          <map key='[v_7]' value='[MassShooting].[v_7]' />
          <map key='[v_8]' value='[MassShooting].[v_8]' />
          <map key='[v_9]' value='[MassShooting].[v_9]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <caption>Year</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Case</remote-alias>
            <ordinal>1</ordinal>
            <caption>Case</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <caption>Gender</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Race</remote-alias>
            <ordinal>3</ordinal>
            <caption>Race</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <caption>City</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>5</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>LocationType</remote-alias>
            <ordinal>6</ordinal>
            <caption>LocationType</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Fatalities</remote-alias>
            <ordinal>7</ordinal>
            <caption>Fatalities</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Wounded</remote-alias>
            <ordinal>8</ordinal>
            <caption>Wounded</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>TotalVictims</remote-alias>
            <ordinal>9</ordinal>
            <caption>TotalVictims</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>NumWeapons</remote-alias>
            <ordinal>10</ordinal>
            <caption>NumWeapons</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>MentalIllness</remote-alias>
            <ordinal>11</ordinal>
            <caption>MentalIllness</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>LegalWeapon</remote-alias>
            <ordinal>12</ordinal>
            <caption>LegalWeapon</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (StateAbbrev)]</local-name>
            <parent-name>[StateAbbrev]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>13</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1 (StateAbbrev)]</local-name>
            <parent-name>[StateAbbrev]</parent-name>
            <remote-alias>Abbreviation</remote-alias>
            <ordinal>14</ordinal>
            <caption>Abbreviation</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>15</ordinal>
            <caption>City</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>16</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_2 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>17</ordinal>
            <caption>Latitude</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_3 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>18</ordinal>
            <caption>Longitude</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>19</ordinal>
            <caption>Location</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Fatal Rate' datatype='real' name='[Calculation_97179238061780993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_7])/SUM([v_9])' />
      </column>
      <column caption='Fatal Rate 2' datatype='string' name='[Calculation_97179238062448643]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_97179238061780993]&lt;= [Parameters].[Parameter 1] THEN &quot;01 Low&quot; &#10;ELSEIF [Calculation_97179238061780993] &lt;= [Parameters].[Parameter 2] THEN &quot;02 Medium&quot; &#10;ELSE &quot;03 High&quot;&#10;END' />
      </column>
      <column aggregation='None' caption='NumWeapons (bin)' datatype='integer' name='[NumWeapons (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[v_10]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='City' datatype='string' name='[v_0 (LatLong)]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_0 (StateAbbrev)]' role='dimension' type='nominal' />
      <column caption='Year' datatype='string' name='[v_0]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_1 (LatLong)]' role='dimension' type='nominal' />
      <column caption='Abbreviation' datatype='string' name='[v_1 (StateAbbrev)]' role='dimension' type='nominal' />
      <column caption='NumWeapons' datatype='integer' name='[v_10]' role='measure' type='quantitative' />
      <column caption='MentalIllness' datatype='boolean' name='[v_11]' role='dimension' type='nominal' />
      <column caption='LegalWeapon' datatype='boolean' name='[v_12]' role='dimension' type='nominal' />
      <column caption='Case' datatype='string' name='[v_1]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[v_2 (LatLong)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Gender' datatype='string' name='[v_2]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[v_3 (LatLong)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Race' datatype='string' name='[v_3]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[v_4 (LatLong)]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[v_4]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
      <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
      <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
      <column caption='Wounded' datatype='integer' name='[v_8]' role='measure' type='quantitative' />
      <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_97179238062448643]' derivation='User' name='[usr:Calculation_97179238062448643:nk]' pivot='key' type='nominal' />
      <group caption='Action (Case,City,State)' hidden='true' name='[Action (Case,City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[v_1]' />
          <groupfilter function='level-members' level='[v_4]' />
          <groupfilter function='level-members' level='[v_5]' />
        </groupfilter>
      </group>
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[v_4]' />
        </groupfilter>
      </group>
      <group caption='Action (LocationType)' hidden='true' name='[Action (LocationType)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[v_6]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[v_5]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/stanley830720/Documents/My Tableau Repository/Datasources/federated.0dseact0pl027i1947yjw1dsk48v_0f2twxi0afrb6e19n969d1u8t0aq.tde' schema='Extract' tablename='Extract' update-time='05/02/2017 05:52:59 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[v_0 (LatLong)]' value='[Extract].[v_0]' />
            <map key='[v_0 (StateAbbrev)]' value='[Extract].[v_01]' />
            <map key='[v_0]' value='[Extract].[v_02]' />
            <map key='[v_1 (LatLong)]' value='[Extract].[v_1]' />
            <map key='[v_1 (StateAbbrev)]' value='[Extract].[v_11]' />
            <map key='[v_10]' value='[Extract].[v_10]' />
            <map key='[v_11]' value='[Extract].[v_111]' />
            <map key='[v_12]' value='[Extract].[v_12]' />
            <map key='[v_1]' value='[Extract].[v_13]' />
            <map key='[v_2 (LatLong)]' value='[Extract].[v_2]' />
            <map key='[v_2]' value='[Extract].[v_21]' />
            <map key='[v_3 (LatLong)]' value='[Extract].[v_3]' />
            <map key='[v_3]' value='[Extract].[v_31]' />
            <map key='[v_4 (LatLong)]' value='[Extract].[v_4]' />
            <map key='[v_4]' value='[Extract].[v_41]' />
            <map key='[v_5]' value='[Extract].[v_5]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
            <map key='[v_8]' value='[Extract].[v_8]' />
            <map key='[v_9]' value='[Extract].[v_9]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='64' timestamp-start='2017-05-02 17:52:59.417' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>LatLong</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>63</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aiken&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Watkins Glen&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (StateAbbrev)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>StateAbbrev</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Arizona&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wisconsin&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_02</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_02</remote-alias>
              <ordinal>2</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1982&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2015&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>3</ordinal>
              <family>LatLong</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AR&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1 (StateAbbrev)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>4</ordinal>
              <family>StateAbbrev</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AR&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>5</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>144.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2.25</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>9</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.5532863266952466</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.541103500742244</statistic>
                <statistic aggregation='Var' datatype='real'>2.4126984126984126</statistic>
                <statistic aggregation='VarP' datatype='real'>2.375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>476.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_111</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_111</remote-alias>
              <ordinal>6</ordinal>
              <family>MassShooting</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='boolean'>true</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>7</ordinal>
              <family>MassShooting</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_13</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_13</remote-alias>
              <ordinal>8</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;101 California Street shootings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Xerox killings&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_2 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>9</ordinal>
              <family>LatLong</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2401.6126859999995</statistic>
                <statistic aggregation='Avg' datatype='real'>37.525198218749992</statistic>
                <statistic aggregation='Min' datatype='real'>21.306944000000001</statistic>
                <statistic aggregation='Max' datatype='real'>48.051763999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.1797287151837486</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.1312595063328379</statistic>
                <statistic aggregation='Var' datatype='real'>38.189046993266579</statistic>
                <statistic aggregation='VarP' datatype='real'>37.592343133996792</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>92526.902047390366</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_21</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_21</remote-alias>
              <ordinal>10</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Male&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_3 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>11</ordinal>
              <family>LatLong</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-6195.4531460000026</statistic>
                <statistic aggregation='Avg' datatype='real'>-96.80395540625004</statistic>
                <statistic aggregation='Min' datatype='real'>-157.85833299999999</statistic>
                <statistic aggregation='Max' datatype='real'>-71.072830999999994</statistic>
                <statistic aggregation='Stdev' datatype='real'>18.717992912055244</statistic>
                <statistic aggregation='StdevP' datatype='real'>18.571182857837954</statistic>
                <statistic aggregation='Var' datatype='real'>350.36325865575031</statistic>
                <statistic aggregation='VarP' datatype='real'>344.88883273925421</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>621817.255362208</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_31</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_31</remote-alias>
              <ordinal>12</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Asian&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;White&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>13</ordinal>
              <family>LatLong</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>63</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;POINT(21.306944 -157.858333)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;POINT(48.051764 -122.177082)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_41</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_41</remote-alias>
              <ordinal>14</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>63</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aiken&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Watkins Glen&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>15</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Arizona&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wisconsin&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>16</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Military&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Workplace&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>17</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>513.0</statistic>
                <statistic aggregation='Avg' datatype='real'>8.015625</statistic>
                <statistic aggregation='Min' datatype='integer'>4</statistic>
                <statistic aggregation='Max' datatype='integer'>33</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.2508266544950386</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.20964306448868</statistic>
                <statistic aggregation='Var' datatype='real'>27.571180555555557</statistic>
                <statistic aggregation='VarP' datatype='real'>27.140380859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5849.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>18</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>453.0</statistic>
                <statistic aggregation='Avg' datatype='real'>7.078125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>58</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.01317336677119</statistic>
                <statistic aggregation='StdevP' datatype='real'>9.9346374611444688</statistic>
                <statistic aggregation='Var' datatype='real'>100.26364087301587</statistic>
                <statistic aggregation='VarP' datatype='real'>98.697021484375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9523.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>19</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>966.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15.09375</statistic>
                <statistic aggregation='Min' datatype='integer'>5</statistic>
                <statistic aggregation='Max' datatype='integer'>70</statistic>
                <statistic aggregation='Stdev' datatype='real'>12.681343314253748</statistic>
                <statistic aggregation='StdevP' datatype='real'>12.581880262405139</statistic>
                <statistic aggregation='Var' datatype='real'>160.81646825396825</statistic>
                <statistic aggregation='VarP' datatype='real'>158.3037109375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24712.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.643548' measure-ordering='alphabetic' measure-percentage='0.254839' parameter-percentage='0.101613' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_97179238062448643:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;02 Medium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;01 Low&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;03 High&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Low Fatal Rate' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range granularity='0.10000000000000001' max='0.5' min='0.0' />
        </column>
        <column caption='Medium Fatal Rate' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
          <calculation class='tableau' formula='0.69999999999999996' />
          <range granularity='0.10000000000000001' max='0.69999999999999996' min='0.5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.0dseact0pl027i1947yjw1dsk48v' type='datasource'>
        <exclude-sheet name='Bar graph' />
        <exclude-sheet name='Barcharts' />
        <exclude-sheet name='Crosstabs' />
        <exclude-sheet name='Boxplot' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bar graph' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_1]' derivation='None' name='[none:v_1:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column caption='Case' datatype='string' name='[v_1]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[Action (Case,City,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[v_1]' />
              <groupfilter function='level-members' level='[v_4]' />
              <groupfilter function='level-members' level='[v_5]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[Action (City)]'>
            <groupfilter function='level-members' level='[v_4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[Action (LocationType)]'>
            <groupfilter function='member' level='[v_6]' member='&quot;Workplace&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[Action (State)]'>
            <groupfilter function='level-members' level='[v_5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[Action (State)]</column>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[Action (City)]</column>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[Action (LocationType)]</column>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[Action (Case,City,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_4:nk]' />
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_5:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_1:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barcharts'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Victims by Race and Location Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_3]' derivation='None' name='[none:v_3:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column caption='Race' datatype='string' name='[v_3]' role='dimension' type='nominal' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>([federated.0dseact0pl027i1947yjw1dsk48v].[none:v_3:nk] / [federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk])</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Boxplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Victims by Race of Shooter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_3]' derivation='None' name='[none:v_3:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column caption='Race' datatype='string' name='[v_3]' role='dimension' type='nominal' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_3:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstabs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Victims and Fatality Rate by Location Type and State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Low Fatal Rate' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.10000000000000001' max='0.5' min='0.0' />
            </column>
            <column caption='Medium Fatal Rate' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
              <calculation class='tableau' formula='0.69999999999999996' />
              <range granularity='0.10000000000000001' max='0.69999999999999996' min='0.5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column caption='Fatal Rate' datatype='real' name='[Calculation_97179238061780993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_7])/SUM([v_9])' />
            </column>
            <column caption='Fatal Rate 2' datatype='string' name='[Calculation_97179238062448643]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_97179238061780993]&lt;= [Parameters].[Parameter 1] THEN &quot;01 Low&quot; &#10;ELSEIF [Calculation_97179238061780993] &lt;= [Parameters].[Parameter 2] THEN &quot;02 Medium&quot; &#10;ELSE &quot;03 High&quot;&#10;END' />
            </column>
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_97179238062448643]' derivation='User' name='[usr:Calculation_97179238062448643:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v_6:nk]' member='&quot;Military&quot;' />
              <groupfilter from='&quot;Religious&quot;' function='range' level='[none:v_6:nk]' to='&quot;Workplace&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dseact0pl027i1947yjw1dsk48v].[usr:Calculation_97179238062448643:nk]' />
              <text column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_5:nk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Histogram'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Count of Mentally Ill Cases with Number of Legal Weapons</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column aggregation='None' caption='NumWeapons (bin)' datatype='integer' name='[NumWeapons (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[v_10]' peg='0' size='1' />
            </column>
            <column-instance column='[v_10]' derivation='Count' name='[cnt:v_10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NumWeapons (bin)]' derivation='None' name='[none:NumWeapons (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column caption='NumWeapons' datatype='integer' name='[v_10]' role='measure' type='quantitative' />
            <column caption='MentalIllness' datatype='boolean' name='[v_11]' role='dimension' type='nominal' />
            <column caption='LegalWeapon' datatype='boolean' name='[v_12]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_11:nk]'>
            <groupfilter function='member' level='[none:v_11:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_12:nk]'>
            <groupfilter function='member' level='[none:v_12:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_11:nk]</column>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_12:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[cnt:v_10:qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[none:NumWeapons (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0dseact0pl027i1947yjw1dsk48v].[NumWeapons (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mass Shooting Cases during Years with over 35 Fatalities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_2 (LatLong)]' derivation='Avg' name='[avg:v_2 (LatLong):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_3 (LatLong)]' derivation='Avg' name='[avg:v_3 (LatLong):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_1]' derivation='None' name='[none:v_1:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='Sum' name='[sum:v_7:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[v_0]' role='dimension' type='nominal' />
            <column caption='Case' datatype='string' name='[v_1]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[v_2 (LatLong)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[v_3 (LatLong)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='City' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_0:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;1999&quot;' />
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;2007&quot;' />
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;2009&quot;' />
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;2012&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_0:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_3 (LatLong):qk]' field-type='quantitative' max='-9108322.2209319398' min='-16443788.798513096' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_2 (LatLong):qk]' field-type='quantitative' max='7754036.5538376924' min='2537887.3077413514' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]' />
              <text column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_4:nk]' />
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_5:nk]' />
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_1:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_2 (LatLong):qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_3 (LatLong):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Scatterplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Weapons vs Fatalities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='Sum' name='[sum:v_10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_7]' derivation='Sum' name='[sum:v_7:qk]' pivot='key' type='quantitative' />
            <column caption='NumWeapons' datatype='integer' name='[v_10]' role='measure' type='quantitative' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_10:qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Bar graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Barcharts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Crosstabs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='163'>
            <card pane-specification-id='0' param='[federated.0dseact0pl027i1947yjw1dsk48v].[usr:Calculation_97179238062448643:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_5:nk]</field>
            <field>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</field>
            <field>[federated.0dseact0pl027i1947yjw1dsk48v].[usr:Calculation_97179238062448643:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_10:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</field>
                  <field>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_10:qk]</field>
                  <field>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Workplace&quot;</value>
                <value>3</value>
                <value>15</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='4' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar graph' width='192'>
      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
      tV0UGrWn6dYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Barcharts' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nO29Z3BcZ5qo95xzOje60Y0GGjkSAEEwASSYKVESlUez0uzM7oS9Dteuctll
      l+0ft8pb9i3X1C1fp1suX3urXLveXd+1Z3ZnRjMcicoSKeZMgggEARAZaORuAB2Ajueczz8A
      BpESQYlIYvdThSp09+nv/c7p854vvEkSQggyZEhT5PXuQIYM60lGATKkNRkFyJDWZBQgQ1qT
      UYAMaU1GATKkNRkFyJDWZBQgQ1qTUYAMaU1GATKkNRkFyJDWZBQgQ1qTUYAMaY3h4TeEEGQc
      RDOkC48owMzMDIlEYj36kgEIh8M4nc41lyuEQNd1FEVZsTaj0SiBQICysrLHHqeqKgbDI7fi
      qqOq6qMKkJubu+YdyXAfTddpHYmug2SBpmkoyv1b4rmdZTht5u/cYiAQYHJykuLi4scel0gk
      MJu/u5zvSiKReFQBHkWj82YXpVs247AaH3hfEBwdRXUXkGs3fuO3NypC11A1gcFgQJIeeF9L
      kdJkTKaVexJ+G3Rd8H9/2Lwush9ma2XeUynA94FlF8GJmQHOXLjI7RE/CJ3AhI/uO33Mx1RA
      RRMQmpngTncX03MRdDVFYHqC3u5OJmbCbMTlRCw4yrHf/pYPjr/LqWu3SGkJ+nt96EBk8jbX
      ++fWu4sZ1ohlR4Cejn6OvPUCPbcHiOTBycs3qC4tYtLvwhUeYVT2kh0YI5xI0XG7nxdf2sep
      Tz+hcvtO2i5c5J0fvo7hwUfseiM0mi9cZecr77Apx8ipTz6luyPOyc8us2XXdurKLHTePI+v
      JcG2g69SmZ3g3LnLJA3ZHH5+H77hAZKBMZw1h6grXvu5eoaVZZkRQOdO7wCTIxNMjPUxm1DI
      lpL4pkLYHRaEpqHqGuH5EMOjE4RmxgkuqORUb2P3zgacVjbeCCB0QoksyvLsyIoJb14edqeH
      yk1bOXhoPw6zjLuomrd/sJf+jiG6OlvJLttKiVvlVkcPXc0XiGZVUZmftd5nkmEFeKwCaNEx
      UrZattTWsaeumLGJOXYffomGag/N128BEpI+T+9gkCNHnqfE40SHDXjXP4AkYZHDzCxoCKET
      DM+imC0YZRmz1YoiS+R68rHasjDogkR8gYnxYYJJAwUF2VgL6nmhaTNmQ8aE8izw2ClQMqqz
      /9WDFOXayHUaGZwMMdDTjj+s0bj3EHZtlkp7Hs7NXpqv3SSvqp48lwNjRRmSJFNXW4ey0e4T
      ycDe/fX89lf/gDvXhGorY5/Xi08+y/GPP6epNvv+U0EWlJSU09vcjxYz4inQNtZ0LsNTI6Vr
      WhRdS5FICSxmE5IEQtfRNB3FaODhW1xXVXRkDGvw1B8aHuG/+ptLqy7nSfg//svXqShwfefv
      BwIBurq6eO655x573AbfBn02kRUj1gd2OiVZxiB//Q0uGwxr5jMiSxKv7qlaI2n3EYIlQ9j9
      M3VYTWvej7UmbRVgoyLLEv/5j/auuVxd11FVFZPp2b/pH2SjzdAzZFhTMiPABkPTBb/8d2fW
      XK4QIISO/A3TwO9CNBLCPzHCl33aY4/T9ZWV+6Toup6eCqCrSWbnQgjZiNvlxLA07xW6SmA2
      TF5uzhO1E5qbw2R3YDWt3GUUQtDSO7li7a0niWiE+cAMs9LGPZ+0mwIJoXHz/BdcutnO1UuX
      mJ5PoGsaiUQCNTHP+eZbJBMJkikVIQRqKkk8kUDTF93EU8kEiUQSIQQ9bbeYDa6H41qGlSL9
      RgChE5wK49lcx76dmzDIKhc+Os5AMEH11m3EJjo59tEMkbDOL358hE8/+JgUMtmVjRyqNPLe
      51cwaEm2v/ZTZFmBjF3ge03aKYAkG3jpJz/i+oXz/D9/f5aXX97PhFLGX/zFbkhGCMwEeevo
      YS589iVD7a3k7zrKc5tz+OT4l7TOpdj/w59Rlx3hDx/eoNxjWe/TyfCUpJ0CCF0nMBOm6cgr
      FFhP4ptLoqcipFQNSVVBLM4LJSFhthqIhaOoKTsJVZDnlInOx0kaQuiyCYm0tCE+U6SdAoAg
      MNTJ2YvnMZocPP/CZrL167z/3h/ZtG07RXmLC+CcglwKNlcwdvYU7x1PsWn7fuqKDJw6+Sl9
      KQOHXnuL+OQgFnMaXsJniPR0hbgb9yxJSJIECHRdIMnyI24QQtfRdB3FsOgioWsaAglZefTY
      lWAjuUI8LYu7QGN4yurWuyvfSHoqwAbG5/MxOb/2m3MCgaZqKxqbGwzOMdTfS8Pux1u2U2oK
      o2HtowpTaiodp0AbG0mS2LPl8TG0q8FquEIEAmYs6tyy55NxhsvwFVLq4y2ndzEo8tIU7vvN
      ep2DJEkZBdhoqJrOT/773z/RsX/zL96iIOf7H5m2Hm4Qd+WmnQLoWoq+oVFqN1USmhphMmFj
      c5mHqeEh7EXlZBkf/THiwSkG51S2VH79UD7S3UZW+TZyrOuTSWLDI3TG+tpp7R7B5CrkuQO7
      sBgUAhN9DM4aady8eF1FMsypLy8Q03Tqmw5RYE1y7cp1FjQjO/YexE2IC9fbUIWNPQf3k/L3
      0XZnGKPVy3NH9jDV28rtPh9ZeUXsbdhKV8t1xgMhCqu3sruumCunvsQf1aio301ljsTVy9fT
      zxVCQqfrRisLOnTfvsGVS9eIpxZovtFDIjpHy43r9I8FQE8QCIQZ6e9netrP5FwQNRlnYnIa
      /+QoHa3N9IxMoQuYnR5jPpFkpL+LmzdbCcVSgM5IbyftnX3EEwkGujtovdVDUl/vK7AeCDA5
      2b3/IK65HlqGZ0lF/Xz5yee09fnuHaVrGhVbdrKnoYbTX5xgQZeoqGugoa6Mc1+eJpnUqd/Z
      xPZSmc9OXEfIVhr37MPLAGeu+jDZXezZf5DkdB8dg2PkFFawb+8uOs6fIJBQySmt48C+Jnou
      niAQh4otDWmoALKJOq9Ez3SU+aSB0lzB1MgYqsvOjTPnUU02Wk9+wlQ0yLF/+g037viQZRlJ
      T9F6/iRjs1EunT+FsDjovHyO8dl5JCSEmiI8n8Asxzl97hq+zis035kGLcngnVa6fUG08ABX
      24fW+xKsPZJCQZGXoY4WLvRNU+qxcfPCZcp278Ntu7/oVqxu5NgUpz49jbe0hhxXDmpkmrOn
      T+IqryWnqIToeB+fX2incnMZ+YVexu60cKrDT32dl1x3Fl3t17kzME9JYREOY5JrFy8QN+ST
      bbbjsmpcPv0JC84SCr25pEKT6acASBJlWzcxeLOZmF6IN8vFQI+PfKeZhCWfph317NvswRdM
      Ysup5M1Xn8OdZaH/5lnuRMzs3FyE5Cxi6+Ya6ssKiMTjAKipOMPDg/QMjjE7F2BgJMS+w3vZ
      sb0eEQ8w5Z9idDZCNDq7zhdgfZAkAzl5BdSUuLlzu4WbnaPoC0GG7/TgD993KLQ5XFRvqWXB
      P0FcA7vDRfXmOvyTE4CE3ZXD5s3lTI5NIWQDrrxCass9DPv8yAYzefnFFHnMTM9FMFmzKC6v
      xKaGCCZ1zGY7ZdVbkOIhIjENu8OVhgoAmHOqmGn9HE9tFaVFHm4NDpBXUIIeG2dwbJKO0Rny
      7AZysnMwGRQQgvJt+8iXIrT3TCKSMfzTU/SNTmI3m0GSCM9Nohrd7N25FbNBpsBl4XZ3P+OT
      k0hGB96iUnZsa2RTSdF6n/6aI7QUAwND2HPzqCjKJqi5eOXNo7hsFizOLGShMdDbz9RQH6GU
      keLycojNMj0xSkQ3UFhSRiI6i6+/F83spLKsjGRglr7+EazZHipLCwhNz9LZ2Y8rJ48Cj43J
      0WF8kyHyCwvJNsYJB/0Mz8bxFpdjVaKMjQyxIEzptwgGkBQbL739Z+SXu7BLVl4++gKFhQXk
      Hmyi+XYnefXPUZ7tQtppRAJM2Xlsq83Bs3sb/QPjaMkIt7u6Kdt5kGKPA0fNdgyObKRQkMHJ
      CPv27mJTcS6JG80Mjmhs37KLZE8Hw6NTVNfnr/fprz2SjJSM0dE+jGQp5vUDW7AbFfRUKba8
      edx2E/7BefI2ebl14xYpVafp6Ot4zHFutHSSlBRePnoUuxrg5u0OVN3A0TcPEpvo43b7IAZT
      Ni++sJWR29dob2vF5q7gQH0VXR1tDA/HKNrzMlU5ds63tzM2LNjUcIQyp6C5pTNjCf62CF2l
      ua2T3Q3bV2X/+tu4QqzkNujqGMKeLCvEhsoOneHxSLKBpsYdq9a+QZE5/j/+bNXa34jo+vps
      jem6/ugI4Pf7M/UB1pFIJILD4VhzuatRH0DX9cW422We7o8bAVKpFFNTU5SUlKxYv74i9+E3
      8/LyVlxQhifH5/MxPLf2s1KBQNP0e/HRK4MEKLBM3ISq6hgMX39MLJrg9q0BNPvT+0cd3Fby
      lWnrE/gC6fj6e1hIgdnmorQ4h9HhaUqrSvim50RsIUhoHgryv3tGsbVg0c1ZoCjKV+sD6Cqq
      LmE0rI9VV9MF/+tvng136JVATcaZG+vl1ODTK+b7//qnj7y3TKsprp+/TiKZpPXqeQbGJuls
      7UcTOqFZP6OjY0STKgiNmekJJv2zBGcmGBiaRWhJQpHohsyTm5j38/Gxd3n/vXe51N6LpiUZ
      HZlEB+anurk5EFzvLmZYI5YZASQMRgvZTjtC0pEVBVmW0dUU3R23SGhJWrpH2VFk4GrnGF5v
      LqVFbiRU2i6eIp63g311trU5kydFaLScP0vFwTeozzfz+Yef0K2EOfHpZep37aC21ERX21WG
      W2I0Pv8KZY4UF85fJGHM4fCh3YyPjaLNjmMsaaS2KFMf4PvOMgogiM3PMjA0gpZajJyCxUQI
      ulAJhBYIzM1h1l0cfOEoJbl2/L4OTlw+i7NsC794fgMafYTObMxBY/FiFujiwgKsNhdl5bXs
      3bcLNXAbk9PLm3uyOXmpj3BOgOzyHVii/bS232G08zzZmw5zNM++3meSYQVYZgokcHkrOHz4
      eaoLswmGw4BgPjjGWMTM26+/jCfLhFFWmY0skErEUXWFzdsb0CIjTERSa3IS3wpJQhER5pe6
      trAQQjaZMRlN2LKyMMgSRYVlZDmyMeoQjwXp6WpjcDpKjseGrWgbP3i+EYsx4/n5LLCMAhix
      mef56IPjBOQctlZVUFFTgsNZgFeZ5fjnlyirrWP/voOMdV7ii3OXwOamqraGn/3kVfr77qBv
      uEWAwr49mzj+q9/w+efvMbhgJD8/n2wmOXH6AqGEuH9RJJ2CglIkCRTJgK5JGKS09B55ZvnO
      luC7X7u7rfTw642MEIKF8BzRpI4z24XFZCAZj7IQS2J32AADJgUSSQ2jUWY+EkYVCllZNoSm
      YzavXgblZykofiW4uwuUV7n9qdt6/1//9Ntug34zD9/o34cb/y6SJJGVncODTgQmiw2T5asL
      drN58WnvzHbff3OVbeeSJLF3HWKCEQJdiHVLUvtNcpPxKD5ljk2rdE0yvkAbjNHR0VWxei7H
      etYHeFxQfCQS4erVq7z88surIjczoc2Q1mSc4TYYui7439+9sg6SF5ODrfQU6E+fr6P8KeqM
      rTZppwAPOn0JXUcXoCgSuqYvZob7mrWMlkywkNRxZlm/ts1oOITB5sRkePp1kC4EZ1qHnrqd
      jcILjeUrqgBCCFRNw7D0+2lLnqSKwYC8lOVPU1V0AZIkoxiUx2bwS7spkFBj/OHYx2jA7Qsf
      8g/vX0JD5cLHnzCT/AaHrMAIN7r7v7HNOzfPMRV9slw+GZ6Oyc5L/Kv/7f9ici7Ojc/+kb/7
      9e/44/vHmYsv/XYixq/+z3/Lb9/9PV+cv7Vs+uK0GwEkg5lyS4LRBY1ACgrMAeYC0/hlN2PN
      X/JR3ySS0cXPfnKQkx9dZy4SYueOWmTZzGRfC51TEvrMbYJJA/MpKz96+3Vk2YAWj3Dy3Glm
      IlGK6w+yq8zIB++fBlce+xuquXbpCildYu8r71BT8P3P5bMupEJ82jLMgd21aHqS8ekUew+9
      RG1JEVmWxWe5Hg2QclRy5PlDFBd4l33Cp90IIEkym+sK6OocIjqfRV52NiN3RvDkyAzOGPj5
      L37OPm+S7kCMvhE/L/3gDSrynfgH27jQNkrTrs0sGD38yTs/YXdRFhPBCACywUR+SRlFRfn0
      dt6i7UYbDa++xY/fepnozCDGnDIqKz10tLev8xX4fiKEzoU/vkt14yEMyRixWIq6xp3Mj/Xz
      u7/5e3zhJdO+IZsd24ro6bjCv/v9pySWibVJOwUACWd5HVNXPsJYVEOJx0173yD57lx0UiDJ
      qAhkJDZV1VHgcSIDisG0VC5JRULBoMjEE/GleSfMTg/SOxqkvLQMm0VBFgYEi2VPEaCYLXjy
      K9hZv/Y1gJ8JBODwEBy8RWdXNz0Do7hLqnnuyEs01Jjon5wnFo2iqhK12xp4+eVXKNDmiS0z
      B0q7KRCAbMwh121jc20+XsWMtXsIb1k5IjrKe+8dQzI6eMdjJex2LB1vprJuF8WWJC03O1HD
      oxw7dgyT1cvWnGwmsnMwOF3IC23caF0gy+1l+84yPvviBHecuezaVo02epP2oELNjn3rfPbf
      TyRZ5vCbfwpAe0keBaXldF07xWfTYTB7+dNKJ1c//ZidBxo5deI0kWSK/ModOJZ5xGcMYQ8i
      BKqaQlJMfFNglNCSfHr6Iq+++DzKQ7tGuqaBJN3bShRLdQhkWX5gx+nxv8iz5grxy39+hMaa
      wsce850NYUKgaRqyYngoqElHE0vBTsvITcsR4BuRJAzGZSyhspEXDu5/5OYHkB+Kp5XuFeBY
      fII9if+oLEv8Fz/a8216vSIIQFvaXlxJyrzZK9reV5AklK+JJZa+RdLbTFD8BmMtguK/znFx
      NYLin5THBcUnk0kmJiYoLy9fFbmZKdAGYy18gQYGBgiHwzQ0NNx7b6P6Aq223MwUaIOhaTq/
      +FfHVlXG/Nw0qUQUd8Gice9f/OwgDdVpmLGOZXeBkpw/eZ0DRw/xsJVfSwUZGIxRXVvI7FA/
      MwYXtSWe1evpCiKESm97CzMxlYra7RS6bcTjScxWC4nQOBNRB5WFa5+bBxbn4gvx1Y2kiyZS
      qAkV05IcbZ0SU20Elk2LEltYWDIn63Reu0Dn0BSe0i0UKj4+ujjO3tkmdpQ50HVB/82zdAzP
      Elfh6Ft/wnjrSbpG5vBWbee53fUY5A0QMyAEgzfP0BN2sbXMycXTpzl0uIFLZ9rZtX8HNm2c
      jjEH8aCBkspKsoyC0ZERVCWL0pI8FqIxpHgE1ZJDTtbaD9sZVpZvNQXKzitka5aTq9f62P3O
      Tjb7vext3EJ89DaBpAFHcI5NTUcwj1xibGaKW0MJfvynb3PqxGcEwpsocG2EyuoqvcMJXnyn
      CbsMc+N+ZqcCzAT8zMwFMdp1Bvs7ydNtDPoFmz1z9IwnMKRmicR3MXDrAvGUmcOvvMkzUJ0o
      7XkyS7AQaLFZrlzrIByLIyGjGE2AwGwywdJuq2w043A6MBqNIJLYbB7MJjMOsxFN2yDDrAD1
      wWW/LGN351JaWs3Ohu1kmRV27D7C/oNNiOA8U1M+QpEw4ViUwOwUKcnC62//iBLPBkv3kuE7
      scwIIDMz1s37x8JU1tejx+OMDgwRjiso5hziUx/z5RWFRq8Bi9GAohhQJMBgwmTJwxw9z7H3
      JlAlN03OjfD0BySFqrw4V1uH2Vdjo290ghe37UROzBFciKMIuJ/NS2Aw2SmrrqUqz4KmC5rD
      MVyZWmDPDN9qG1TXVFQNTKZFvRGahoaE8o1V0wWxWBKLxbShYoaFnuTqmS8Yj2jsaHqO6uIc
      xnrbaB/w09BYh4qbUg/0DUYoK7Jw6fJV5lMGGnY3Eo/MU11Vtmp9WwtL8EJwGjURIzt/cW/9
      X/77z7G7tjCzDbocsrKYLeEukqIs04CE1brxFoqSbGLfiz+4+wqAouodFFUDknRPmaurF5Nf
      HXnp1cUjJQnycta2sxlWlYwhbIPh843icOeuqozhoSEikTDbti/WObBbjCiylBkBMqw/kgSu
      rNVdL83aTAjV9BU561WkYr3JKMAGQwjB7cHpVWm7wOPA4/z6uGbpAS/WdCKjAE/A3VoChm+o
      GaCpKpKi3AuOeRo0XfDf/u2pp27n6/hPfriLHxyoXZW2v6+kncrrqQRXrrcggMm+Ni60DiLQ
      6WttIfgNZdxjs2O09Q5/Y5v97VcJRL+PUwjB/OwUH79/nMFAjFR4nF//+tf8+te/4h9+9yHB
      qLreHVx10m4EkBSZ2cFBwrsa6B/uZzig0Fjn5nb/DAeLfHx0qZnc6kb21XsZHAoTmh7GarcS
      SRlJREMMjs5g0ucZGBjCXFjHgZ01xObDWJIxWjua8fkXaDr8IgVOA22XzzOVsnOwaStdNy/j
      j1t58aVD2FYgfcrKoOPr6yM8PcJ4MEFZZRE//9nP0CKj/Ob9W5hNz769I+1GAEk2sK3UxG1f
      mGjMSJnXwnifD2OuhfOnmtn1/FFCLacYCof5w2/+iRnseF02hBbl/CefgNVBa8ctdh4+SnKo
      neHpEABCh7ziGg7uruXsl2fpvnaSSSmfXfUVDN9pJmotY2eFwrnLt9f5CjyIwpa9h6ityr1X
      xksxGLh++ho7XjyAdcMo6uqRdgoAEoVbtzB65QxxcyX5Dhc9fSMUOrIweooozHGyfXMhgUiK
      mvqDvLBvG2ajQu+1M0wYcqkpysaQ5cXjsFFakE9SW5wmxOYDnD59kgvXb5MkxdScTOO2SvK8
      +chahN7uVq51jZPtXvttxuV48DYXiQC9szJ1xelh70hDBQDFXkK4/yql9WWUluXSM+ojt7Qc
      c3KY05eucOqOn0q3GZPBuLiwFYKava+wPUdw4mIn2sIM165e4WbfBJ4sO5Ikk4rHMJnt5GVn
      oWsStRU5nDl5lis3WpCtXpyOLLy5eViNG8QlBECk6GptpqN3kM62a4zNzNNy+jSbX3wBizE9
      bo20NIQJIQjN+LG5czFKGrPBCNkuN1o8zPikH4szj0KPnXAkhcNpRaQSxFSBxSgTDIY4e+ki
      jTsacDg95LgdJKMRZJOZ2ckJUpKRLKcDl8OGf2KSBAa8uW5CM9NEU+DJ8+KwfvMosJquEHd3
      ge5FhO3cTmBqioVECpBw5uQipRLYXS6Ma+i6njGErTGSJOHK9S69kvHkLA73Bls2lVX3g7id
      zsXLIxnN2I2L7+Xk5NCwYxcV5aX3/Jss9sXgmYLSr8ateovu57T3Fj5ZmKMkQW3p6gQWuR7O
      bSop5BYUkcviQ0HTNAyO9PJyTUsFeBokWaGqYvWc4RRZ5t/8Z68se1wqlULTNCyWbz+lMhqN
      jzxx76ZwSTcyCrDBEEB4YfmsHD7fCLH5ME1Nu7+1jNLS0q+XnVGA78Y31Qu7y0ZyhV6O9a51
      pmk6/96/fm/Z46KhAH/5541r0KNnm2WW+hrXT50htBQ8HfSPcKn5DrGFALcHRu4dFfP3c6Xj
      vqV0qvcanaMRbrfeIqY+aiHV1RStl77k008/5dMTF5l/XBC4UJmfjy6b5vrJEUz336b9jm8x
      7kWPc+3KDfyhCLc7O4ipKtdb20FboLWzB1VLEonGV0z6SqMnFzh/+gvee+893jv+AYP+6Hp3
      6XvFMiOASlfzBYKuKl7eVUr/zSvcGnewc1shLpsMCAa62xns6WTKVs+e2gW6OjsZ6GrF1bgJ
      MTpNWX09gbF+7gz5qdm2A2+2DV1L0to3yU9+/A4gYTUI+rramQ4mqdu2Dbsco/XmLRyFm8i3
      hXjvw3b2HGqgelM5g13tJEw57NpWQ3AmQCwUQGTlokXDTE1OkV2widoK72POSTDe28+5gM7m
      TcXERvu52X6bbG8RziwXJkljYtIPOzfjznIy2XOVD6/7Odi0g5qKPLpvd5NSsmlq3Exkdob4
      fJCQasST4yHXZWVqMkBeYf6a7S9LRiu79xwklYrzxe/+iGzZeHaGjcyyhbKLqneQGO5kIeJn
      LO6iyJ1FPBKgrz/A1O2L3ByaJz/XhSIL2s6dIJC04HFaF3M1ShIi4efM5W4KvDbOn71MUl80
      vGjzAdra2+i4M0gqGSehG3BbNU5daqbz7Gk0dxFqfB6j0YzRbMWZ7WT41iWmU3b08du0jEQ4
      /d7fcf7WMIoW5syVG2S5XbRea2ZZDxbdSH2uiZFQnD7fNJXl5YhUgs62ATRY6mCYjo5xLDY7
      NrsDd3YWWiKKweaCyTauDIS49Mmv+PLGHQzaPOcvtxCPRjh/teWx+ShXGkmSsWVlIaKzJN1V
      lDkyy7pvw7IPKt1gwZ2t0N3Sg7eyGCMsJZIUdPcFOHRkL6WFXhTiTISMNDVtozDXxV33ci02
      x8RsgK7eITR1nqRY/Lpsc1JSVExxQR6SmmCw+zY9fQMEw3FKNlcz1H6dibkFrE4Xnpx8Skvz
      mewdZHR4gNHZGLGZIPbcSt547Si5WUZyirawpaaSbKOV5Wq1CDRqd9dwp7mL2dkkebmOxSnW
      w5qjQrbLg8dbRFlxAcnwDJ1tLUzOzREKxrC6S3jttVeoqq4lV5vhVl8/zryKNVUAWAzxbLt8
      k4bD+9Zc9ved5ZJHIwmJ6vJ8rnT1UFboZfH2XfwryrVy+3Yfw75xUsKI05ygp2eAkfEZFguq
      CxSLE7fLRVVNHZurq+8l2NJ1DR1Q1RTzM5MkswvYWleF2aCRVOzsP7CXwFAPMc2IFB1neMxP
      bkUxBcXFbN1ZT0VpDkarHePdbMt3F97S8l6ZEhKG7Cr00XNo3kqyjHc/0Jc+v/9aMpiJ+ccY
      nZjGPzZMbl0jlcXZgITBYsNoVJBkI7XbKrj0xSXqt1c/2ZVfQcJTPsYkN3XF65PM6/uM8stf
      /vKX3/yxTJbTQV5xEXnefArzvThdWWS7XTiyHZRWVxCaGCOlOKip2UTNpmKmxiew5BRTU1lC
      Xm42TncBhdkGJqfnsLvzyc9xIMsKbruJmbkIsYROYXk5UjREJKVQW1ONw6AxMjpF+ZZtFHvz
      cGbJ+OcW2FS/HT04SSQJRcUleFxOHA4HsmLEmZWFw24ly+nA4bQ/VrMtDidZDlp3OooAABiA
      SURBVCd5BflUVJThdGThcDrJyXXjcGbhynLgcGST5XTg9ORgl+PMhJOUVVcTnBzDlF1EdUUJ
      +bkuHFlOZEmQXJhnLmVg746ap3oKB0MhPmv2LXtcKhHl8NZCqirKUDWNwrIKsm3f3Zq6nslx
      NU37xuS4qy03LV0hVho9ucCNq9fx1jRSUfB06cCHh0f4y3+4vuxxCyE///XbO3jpyMGnkneX
      dE2Om1GADcaTZoceHh4mEAiwe/e3N4R9HRkFWCJTH2B9edL6ACttsLvrCzQyMkJFRcWaxgc/
      rj7Aqst9+M28vLw170iG+4z4fHRPJtdcrhCClJpifGicQ4cOrelaIC29QYXQEcisV8JoXdcX
      63l9pbiUIJFMYTY/2TQglUwiGwwoK/i01HXBX/3x2oq1920Qus5mx9wDrzV0IS1b1+z7zDJn
      luLdv/5bfHNRtIVpLrc9Wi19wucjnlBBj3OjpYX4E8SGC6HRcvoLTpy/hf4dliBzg210jkW+
      9fcWheuM9bTw7u+P8bs/fMhU5L6bg55a4Oz11iduqqu1Ff/cs+l6MDPax2//8Z/41a//katd
      w4QmR/jd3/01l/qC6921FWXZ+gAGRePy5VZ+eKiEmdACkcAIZy+2oMlZHH11H58e+wOOsk3s
      PrAXm9FB1D/ESNxOTambW+2deF0mrtzswFVUy6E92zEqEloyxshCEqH2k1DrCY730XlngFAk
      hTvHhn86zOE33kKZ6eXSzU5yy+qpKXYwEwjhG59j7+4yDAlBLDjJmbOXMOSUsa3SzY0bt5At
      Obzw0gHuXD/LRCCE0VPBCwd2YVLuOuqpNF/rZP9rP6TALiOZDAx33qS5a4hNW7cTnBjik48n
      UY15vP5CI62XzzESWKC+6SCbPEbOnjlLOGXkyGuvkoqn0PRncw/BYMnmjXd+QnKqk1M9/VRa
      SinxKIwHn6314bKuEI78KnLlSQanFzXfYLKxZftOSsx+rg0kqKypY9+BgxTnmBnqm0SSZbrv
      dJIMD9M/GuP6lets33uYlH+A0cDi0zI650MyFpKnCEZDcWYmp8jy1rKzzktKzuVIo5fuwTku
      XbrB7oPPMz/WQ29/H19evkVdwzaMCT++QIyrF69QvvMQe7ZtwmLNYltDIy4xTutgkNHRSQ4c
      fQNjxMfCA+lOJNnIoed2c/Hj45y40ExiforLt6Z5/qWjlOU5kI0mmg4fxRQNMN7TwjgeXn2x
      iZar1+huvYSlqomju4s4caaV72MilCcl2+Mh5u/lszM32d3QiLeyhsrvSQWgb8OykzshYG9T
      A+3NHWgCxntaudF6m0hSQyQ1zEYjJpsNs0FBQiYrJw/DfJjWy7eoO7CN2fEpem53oCnZ2E2L
      c//+1g4ioTGm4iGaWwbQMeH1uLFaHHiyc7BYzUiozIxN0XXrFpjcWAwWXnj+CBUFOfdMtXHZ
      SHGem2yXi/HuZlraO4kmdURKw+zOxWmzYjYZvxL1LQS4Smr4xX/wz6g0B2nrH8PkKcDjcpKd
      ZcNk9+B12rCb7IRmQnjzC3C4cskz6PgDUQoL83EVV2GNBZ9p//m5kU6OfdnNq3/2z6gudAEg
      IR5IHf9ssMwUSEJWZMyeKmpyrnJjNkqdOUVM15iamiS3XKLYY+Lk55+x71ATyDooVho2O/i7
      8wH+5Rt2Ijur8EUimEwWFMWAlojQv+Dg5z99HQWVD3//HgvWYhwSIMPielJClozU76hgMj6P
      0WjFYLB/ZcEqA5sKbRz74AOKC7xk6UmiKZlYcIqKaumeZsvSQzqup7h84mP8qoH4TIimV/YT
      GjnJ744NULW5+v4TQdYp3lLHFx+fZLrDjOTcxIEahU+Pv0ubnKBkzw9RAj2wgo7aG4n2jlY0
      PcHZT4+TX7ODPDXAlcvtDIsg5c43aNpc9Ez4HS1jCBNomo4sKwixuCMgoxOLxTCYLRgUAzKC
      eDyOwWxGZqlYtK6RUDUsJhO6rpGIxZCMJszGRaebB03umrbouibJMpIQCCQkSaALCQmdeCyG
      YjRjNCiAhCxLCKEv9kUSJBJxJMWIQYJYPIHJbEZRDCD0exXapQeKWi+a/DVSyRSSwYDJYEDo
      KolkCqPJjMRiWKKmL35fTSaIJ1PY7IsKmIwtkBIydpv1kbZXgvWsFH93F+h//sv/FBCo6uJv
      IysGJPR7VX4Ug/ExNSG+PRt4G1S6d6NKkrL0dJSxZzm+cozV9lAgtaxgWcoqJssKVvtXi2k9
      uMf8lf3me7n5pcVKMyjY7I8W4pIkeelzCYvlvuyse15ti9+FxRoGX/2utFjJxnr/1CXFiNVq
      /Mpxd/tlNFswmu/H3ZptWZjvfW/l98plSeJIw8oXhV4WAZqmIgUXbRCKsljx5z4K62CrWnUe
      OaWFhQVSqdUt05nhm0mlkvxHr25Zc7lCCFRVpbU1TigUWlNLcCqVWqwrt8akUqlHFWDxCfns
      54TcqKzX9b87E96/f/+ay37YC7W5uZktW7Zge3hmsQpyH1GA1Raa4fHMzgX5q/ef3Bi3kuhC
      f3TTYC3kLq237qLODLJ79+4n8ol6Gp7IFUJLJQmHQ8gmKw67HUkSCCEhSRCcC+Jyu75XWR9A
      oCYTqELBbDIioRONxTGZzaipFCaTidnZOXI9bmKJFBazCV2IFXV3eGzvhOBq19iayNqoFMr3
      rfxCLG2EmKxIeoL5yAIYLDgddpQV8KN5/K8qBOc+/C3nr97g84/fo6V/gjm/j97eSYSucu7a
      NVKqjq7r9xIrPfj/g683Ep2nPuTvj51EE4JUZJy/+Zt/oGdkmt6+HhJqknPXmkGP0tk3iLow
      ydWO4Xvnoev6Q+eoo99NKnX3vfU+wWeI6NwYf/tX/wtXuwP0tV3m9PmLfPzuP9HcO74i7T9+
      BFD9zEkVvP3G8xCb5MNPbxM2TNA+lmJ6fi9iboh3/3iM2ILOOz9+i54rJxgKRDHmVPDWLifH
      zw6QlMz8+duvYN0wueYFGk7cxiThhIq/a4SK8gqUVJKAP4ZSt7gNikgQDqToiVzn7GUfocAu
      mrbkcuJ0M8lIlBd/9heMXfmI/vEw+eVVGOweXthVxacnrvD6my+xUc72e40W59zZc+w++iJx
      FbbseYHSuhBXTnyMtkJ2+MePAFoSDA4kCRSTFaNioqaxif37jnCooRZDTgU/+dGfsntzCQv+
      EfoDKaprqpj3dTCbTBGSHPzsnVc2XqZhXWX3jjxudk8xMTdHflEeutCJBuP3n95CIxpOUlO/
      g227j/DaC/twZrkpK8gl361yq2+O8MwUB15/h6OHGlkY6mcs4EeTLZmbf4UYuHmeiFKMV0mx
      EJlHaDHOfPgJ3eNBbOaVybL9+DvTlE18tptYUiMwNkjCasYoWDQ+SRLSUpFsGRlJlkExkltQ
      zKEjR7DJgsqqesxGZQOuEQSOiu0stJ0gLPLJWar8/nW9lCQZLZUCWcbXcQ09bxP1NSXIQmD3
      lpOX40QxO9hS6+LkZ2eoqN++tqfyDCNbHJiZp+XWHfr6+gnOq7zx81/w8zeauN07uiIyHj8F
      kh3s3VnMR8d/j2Swcuj5l8g2pYg0n+BcK3g9HmQkHG4X1uxCGqomuX7tOjaHl8KmfLzOjZik
      SSLbW4BZsVNc5cFevQlHIoBmtOIpcCNLMgWeHJBM5HodKPY8suPNfH5invqKQoZv3mBOiVHc
      YMEi5y6lEZcoLK2E5jE2l2QyM6wUFdv3U7EdQhOd9EcLGbl1lbahKVJC4cCLr62IjCeKCVbV
      FJJsuLfqFrqOWHJL+ApCLLkQKGy4h/5TcHfBK0sSmqYhGwxfGS30VIzm82dJ5VRzsOHp0qKs
      pyvERqFQnubf/Df//Gu3QXVNWwxkWoFduUxQ/AohdJXIfAy7w7HkovHd8fl8DM+t/U8iWKoP
      oKy9v0NKTWE03LcE93Xc4Mc/fGVN7ACZoPgNxpMGxa8065kX6OGg+NHRUfLz81fdPUJV1cwI
      sNF40rQoK026pkX5buOd0InFElht1uWPzfCtUDWdd/673653N9KGx64kFkZv8smVYYQe4//9
      67+ldyJIaNrHuYtXOXHpgcwFepRrN1tJJCK09wytcpefHiFSdFy7wJkzp/H5w4sKHY0hgFjQ
      R+9YeJ37l/lbq7/HjgC2gkpil68yXxHH6HIQmJvFJPlRrLnERy/xx/dniKs23nnrAJJmYqK3
      hY8/a2Vk+0727yjhy9PXESYHr/3gFdyPqYy4pgid3qsnGdVL2Flj59LZU0gHd3L+ZCuN+3eQ
      rQTo9M0yPy1TubkOp0lnsK+PlMFJdWUR4fl5pFgI1eolL3sDlTzN8J147AggGVyYlBj9fdPs
      aKxnzudn2uensNyLMSuXl1/9AcV2iWh0genxMAUVtdRtb+KVF/bSduUaJTsaKTZHuDO+gVJp
      CI2BccHz+7dTWFxFVYGbyFyYaDRKUlXRhc6obxApOcWFq330dzYzMBVmcqCFjp5hznx+nM/P
      3UR9RrNBpBvLpkfPy7LROTWDN7+SrOgId2YtFDmNyEYbTpsZk8GMYNGKKssKsqxgMhlJpVLE
      5iOY8yoocdvX4lyeGF3o9zxJdARWZw5FReVsqd+M3aSwteEQDbt2IEWi+P2jBALTzMzPE5qf
      RTc5+MHbP6TQnVn/PAssa02o3eQhkZJxZGWRV2jH6M3BLEvYLYurdpPVjCIrWGwmZHMW1sgw
      xz8+Td3O7UzcGWBkaIykuoGelpJCdZHOxat3mPH76BsP4HC5MCRnmZoNoeog3dsYE5itToor
      amjatZ/KQi8mWw4Oc8bb51lhxbdBF5Os6hgM8lLAu7zhUusJkaLl0hkmIxr1DfupKHAxOdhJ
      5/AMW7dVo5FNkRuGfPMU51u43nyTBdXAtu3bSCwsUFFWvKyM70rGEry2ZOwAG4yMAqwtGQXY
      YIyOjuLNL1xzubpYMoQZM4awDOuMybj2awxdl5AR6yJb6Mq6yc0owAZDCMH17pUJ9/uWglHX
      qVaXmkphWMbvp8zrJD/n0RxRT0tGAR5CCEFqKTh+PdB0wf/w/51bF9kbmf/4zUb+5PDmFW93
      Y23PrAmCoZYL/O4Px/jjex8w7A9/NYhdT3Hh2k3Q5rna2sHDO7izg210j8+vZYczrCJpOAII
      5saDHH7rRzjDPZy41I3nSAWXL15BcZfy3J4tRObnQZLIsbuR9RSdLdfoGZulcmsjmz0eLEmJ
      RMTP6TMXkJwlHGqqZWomyqZSL0PD45SVFXDj3Ckm5hUOv3AYT1bGZWKjkoYKAJKs0tPVgT52
      G7O7gY7rlyjadgh16Dq3Rpb2+LV5ursmsKtj9M/AoV1baBkao9IkMzBnYmDkPBWNL5Dsv0rr
      bY25eSObSjx037yD1x3n1piBt1+ux/C0ETIZVpU0nAItFoRXtAh3RiMc2lvB1ICPtqsX6Z9O
      kSWpd49CRiYcUamqrcJht6EYDfeumG62U5qbTXl5GUldXfQFkUCWJZTsTTSUpfjow88ZC2Sm
      SxuZtBwBUMxU7zzIZredj46fpqauivGIhMtmwGq33n8qSDrFlcV8duIcvWZBwlEGGJGBXIfK
      F2fPoIenqG1oInCjg9OnZ+j0TXF4wU9g3kiew8RsJAo8e5VVnhXS0BAmSMbiyBYrBkkQCUcw
      m01EgnNoigm3200qmcBmMRGNqeixIF19Q8SCM0TtBby6fytJ3YBJ1ggE/AijnVy3k4XgHAtJ
      DYvVRrbDwlxgFlVI5Hg8GA1PPtBmLMFfz2rsAqWpIUzCZLXe+9/hdALgecD6alz63GZTSGLH
      5XJitTvZWVmJbDCzuKRV8Bbc9wly5nhwPiDF4/V+t95JsLM6/zt996kQi1vA0jrUrb1baORx
      5LlWJ2lzGo4AG5tMTPDayk3LRXCGDHfJjAAbjJERHx/dnFxzuUIIhC6Q18F1XdO0dUnHomla
      Oq4BFtE1DSHJX80xL3QWonHs9iebby4W8DMtFfBboX4JwefX+lesvQyPJ/2mQEKj4/IX/OPv
      /8g//eb3jAaj9z7Sk/N8fvHGEzfVfvUaU7MLq9HLDGtE2o0AQuiMDgbY3vQ8W6sKUGS4eeYz
      Onwz1O5oIDHdy++OTRNNWPjp24c59emnBGMqJdv2s7vEyIefnUVVYf8PfowiGzZg5usM34a0
      UwBJNvDCW69y4fwlftsc5+jzjfSFHfzZn7+ElJpncqKc1148wuUTpxi53Yqlqok/3+Lh408u
      cMuvs+XFd6h3zvH+6WaqXGl3+Z450m4KJIQgIYy89OYPOVDuZGAqjGRYrMyoKDKyYsZqMmCU
      DQhdQ0JGURQMQiB0DYOkICsGZF2QKYb0/Sf9HmFCZ6DtEn2BKGgyh4/WoIQv8Idjx6jeWo8r
      azGFiz07i8ItlQycOMWxHkHBpl1sKzPwxZfv06lBw9G30Sb7vpWVN8PGIz23QYVAF2Kxyo0k
      AQ/UNXj4UF1D1XQMRiMSoKsqGmB4qEbASpFxhVhb0lMBNjAjPh/tvtiayxUIdG1jpEdfS7kZ
      BdhgZFwh1lZuZgKbIa1Jv0XwBkfTdP7D/+n99RF+N8lrGslNOwUQmsr49AzFhfksBP0EU2aK
      8xwEp6ex5HixGB79JZKRWcYjGhVFeV/b5uRQL7bCTTjNTz+gCmAuEn/qdjI8GWk3BRJC5eq5
      y8QFdLec54vTV0lqMa5dvMlCfJ6hgQGm5iIgVCKRGDNTU8z6pxicmEZXUwSDYcLBWXzDg0wE
      QugCJod7CMVTBKbGGBwaJprUAJ2ZyTFGxqZIpVJMj/sY9k0+kmUiw/qSdiOArJiocesMzCYI
      pQyUZMfxj08QtTvoOH+ahMVF4NwV3vzpy3zw288wuj3s21aGBNy5cY4ZYwnBgcu4SuoYHbzB
      i2/+YLGYdjJGf18/qVScruEZ9pTJnLrmo6DYSzw0zu3eCZymONMLB9lTV7DelyHDEmk3AiDJ
      VG2toLe1g2jCQ57DxdAdH95sIyEpl1defI7nNjvpm0mQlF38yZ+8Rr7LzmDLWVonNfY1VKI7
      Szi4fx+7KguYXbjvTBeNzjM1G2R8bJiuO+McevUljhzeh7YwTjiWZEFTGR8bXMeTz/Aw6acA
      gDW/humrx3FW11BWkENLbx9ebyGJ6BThWJKh6TmcFoVCbxFWkwGEoKh2J7bYDAPjYdA0dE1l
      bHIS89L+9czUIFFDLm+8+BxZZgPZZpmRqTni8RhCslBcVctzh15kd/3TFdLOsLKk3RQIQFLs
      7H3xZcqrcsiWrOzZG6ewpAS3McrJTz7AXdJIrduJqF3cnDBmudlc7aCoaTttt4dQ5yd4//gH
      FFU2UpbnYiZeg8mVx7zvNCcvhtiydQs7aoq5eOJLTow4OLRnN4Gblzl1boAdew+t9+lneICM
      IexBxF33Nolv8nIWeoqL19s4uHf3YiqgBw68eynvvvfg64c/+yYyrhBrS0YBviV3K6rLsrwq
      sQA+3yjmLPeKt7scQghUVV316uxfRzKZXBcLdDKZfFQB/H4/iURizTuTYZH1cgu4q9jrFZu7
      XnIzI8AGY72ehuk6AqTlLlCGDHfJKMAGYz2mAustez3lZqZAGdKazAiQIa3JKMAGZbDrJqdO
      nccfWr3oMDWxQOv1y5w5d4mJuQWEnqTl4mnOXGklntJWTe5d5vwj3OobBwQzvh5OnDjJwGRo
      VVMNRGZGuXD6FM1tXaSEnlGAjUjCf4fLvXNUlTi5ePY6qVW6I2YmJ8DiobLAzsXL1/C1nGFa
      ySdXTHOhbWRVb0Q1Nsv5E1/SdmeEZDTEmUutbNtRx7VTXzIfV5dv4Lugx/ny5EUKN22mJN9D
      bG4yowAbkcjkBJXbd1NRW0+WGmJhlTQgv7yarTVFTPqG8XhzuTM0z+6merbu2kFsfBp9VaQC
      6HTcuEHBtgbcdhPx6BwWTyWF+SWUeLJIJFOrIlWNjDLqj3Ono43+8QDBudmMAmxMllwnBIAA
      aXUUQI2FOPHx58QdFRxq3IKMji7EYtaMVQzRis8M09Y9jpxcYHxoiNn5OJJYVDcdVm/k0TWs
      2V6a9u4hOtXFaCCWUYCNiLOwgIGOVkYHuwjLWdhXKffQYHcriewitlYVEYsmqSlz0Hqzh66W
      W1iLclft5jDY8jj4/AGsioxiMWG1uokGhgjMTjLqD2MxrY4xzuAsxiHmSaoCSZfIduVktkE3
      Kn3tV+mbWKBx337yV6k6yvRoD7d7xwBw5Fewu66IG+dPE5RyOXygEatxdffn9VSU4al5Kkvy
      8A93cb1jmNrG/Wwqcq/a+DPj66O5oxd32WZ2ba3IKECG9CYzBcqQ1mQUIENak1GADGlNRgEy
      pDUZBciQ1mQUIENak1GADGlNRgEypDUZBciQ1mQUIENak1GADGlNRgEypDUZBciQ1mQUIENa
      k1GADGnN/w/UklH/4UEL4QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Boxplot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstabs' width='192'>
      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
      IcQf3XE9A9qTg8wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Histogram' width='192'>
      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
      nG/01/UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      Kt+MsZHljZ7lmWcAwPsGVoslPnh4P4o0BOss1ssVnLXgQsBZh0oqVFWFs7MzXLlyxSvEwZQK
      HFoujqHdteiHAZvdFk1Vw4SgOcY5+q7HrRduHg0SKzHGMWIsXWdqdcmPSZm967oD3SBXlkv7
      6T5Tym0e05TrP1NMkD6HUirGLKXi2zHwIAXk134uGIAxbxqtlI8KZEAMkWOM4XR9gvc//ADC
      WqwWyziT3b9/H6+99loUnwhTsnQJp6cn0Fqjqnyc0qC1j1B1PhjtGBGns2oa8Eb/TynW9Fz5
      tS8jNpTGk8/SpUhQ2m+MKcYVTYlfU8pqaTVMn905h77vsdlsjj5PjnzMzwUDAP7BT1dr7Nod
      nHNoqhq7roWzfhY5PTlFH5Rlay3efvtt3Lp1K87++bUIxwhqu92CCwGjDbQ2qOsaRmu0WkNr
      jeVyCcCHMy8Xi9E1L5ppcwLLxzJlHbnsu5qSwYG93lGSyVPin9Jtjo15ajzpMV3XYRiGg9X8
      sqCxbbv2+WEAWgWunl7B+WaDk/UJTAiPBYDlYoFF00Q58fbt2zGOnGbbkuhxjBmM9bFGZ+fn
      WC4XOPvwHIwB6/Uajx49DjOmRdu2WC2XRQWvZL0pEXc+hmMiROn/kp4zJdJ8FEtY6bgpEemy
      qwTF+nwc4ge8xa/TA6yzYLvdzn3W8wE+KkywDJXQti2c8zFAZ2dnBx8KGJsYSwpbSeksEU76
      EUv3ye+VIj1eaz1SWqeYI5XD6X9SJNPjp2Tw0vXz46bCKfrer6656JSe0/cDdu0OSkpYG4wR
      wpul+2HAcrnEdrtFXdcYhgHLxcLngoTQkmEYcO3qVUyh73ufKKMHdHoAZ/z5WQFSTBE/4BWs
      NISWcEyRTIkoP74009HvY+fl4kZJli9lZKWiR0khzs2mJSbN95WuM7Xy5Akt6YRQmvnT1VVV
      CpvtBl3fx20SEl3fQwkJow2qqoKUErtdi673YpBSElobVJUqMuHBc3IOJSUqWT1fDEAKXG7T
      TyGEQNM0RYsBYYqIppbky8i26bEXfsBwL2MttNFgbnx+6T6l8V0kuhwTtfIxfRSkjDv6mzFc
      v3btUjpWPZG4dJkxSS4gQ47IM+8IS+GcizZvrXU0bQ7DMDqu7/vICKmlpqTIpbNbuv3YGNK/
      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
    </thumbnail>
    <thumbnail height='192' name='Scatterplot' width='192'>
      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
      ZQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
