<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0327.0758                               -->
<workbook source-build='10.1.7 (10100.17.0327.0758)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='Low Fatal Rate' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
        <range granularity='0.10000000000000001' max='0.5' min='0.0' />
      </column>
      <column caption='Medium Fatal Rate' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
        <calculation class='tableau' formula='0.69999999999999996' />
        <range granularity='0.10000000000000001' max='0.69999999999999996' min='0.5' />
      </column>
      <column caption='High Fatal Rate' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
        <calculation class='tableau' formula='0.69999999999999996' />
        <range granularity='0.10000000000000001' max='1.0' min='0.69999999999999996' />
      </column>
    </datasource>
    <datasource caption='&quot;andyzhang/final-project&quot;' inline='true' name='federated.0dseact0pl027i1947yjw1dsk48v' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='&quot;andyzhang/final-project&quot;' name='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri'>
            <connection APIVersion='' authType='none' authentication='no' channel='http' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;andyzhang/final-project&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50Omplbi1jaGkiLCJpc3MiOiJhZ2VudDpqZW4tY2hpOjoyNTFmNWY1NS1jNzU4LTRjZjItYjcyZC0yMWU1NTE5ZDE3ODQiLCJpYXQiOjE0ODQ3MDY4MTgsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.4Sn22xO4wnG8BI7w8IW2foQudOpn9jJ7QynZxBXlkHKaNaCz5Z777ZyrIp2RDPtcIIqvdzb_xhfOZW7lh7O7_Q&quot;}' connectionName='&quot;andyzhang/final-project&quot;' filename='' increment-key='' path='/' port='80' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[MassShooting].[v_4]' />
                <expression op='[LatLong].[v_0]' />
              </expression>
              <expression op='='>
                <expression op='[StateAbbrev].[v_1]' />
                <expression op='[LatLong].[v_1]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[MassShooting].[v_5]' />
                <expression op='[StateAbbrev].[v_0]' />
              </expression>
            </clause>
            <relation connection='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri' name='MassShooting' table='[MassShooting]' type='table' />
            <relation connection='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri' name='StateAbbrev' table='[StateAbbrev]' type='table' />
          </relation>
          <relation connection='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri' name='LatLong' table='[LatLong]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (LatLong)]' value='[LatLong].[v_0]' />
          <map key='[v_0 (StateAbbrev)]' value='[StateAbbrev].[v_0]' />
          <map key='[v_0]' value='[MassShooting].[v_0]' />
          <map key='[v_1 (LatLong)]' value='[LatLong].[v_1]' />
          <map key='[v_1 (StateAbbrev)]' value='[StateAbbrev].[v_1]' />
          <map key='[v_10]' value='[MassShooting].[v_10]' />
          <map key='[v_11]' value='[MassShooting].[v_11]' />
          <map key='[v_12]' value='[MassShooting].[v_12]' />
          <map key='[v_1]' value='[MassShooting].[v_1]' />
          <map key='[v_2 (LatLong)]' value='[LatLong].[v_2]' />
          <map key='[v_2]' value='[MassShooting].[v_2]' />
          <map key='[v_3 (LatLong)]' value='[LatLong].[v_3]' />
          <map key='[v_3]' value='[MassShooting].[v_3]' />
          <map key='[v_4 (LatLong)]' value='[LatLong].[v_4]' />
          <map key='[v_4]' value='[MassShooting].[v_4]' />
          <map key='[v_5]' value='[MassShooting].[v_5]' />
          <map key='[v_6]' value='[MassShooting].[v_6]' />
          <map key='[v_7]' value='[MassShooting].[v_7]' />
          <map key='[v_8]' value='[MassShooting].[v_8]' />
          <map key='[v_9]' value='[MassShooting].[v_9]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <caption>Year</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Case</remote-alias>
            <ordinal>1</ordinal>
            <caption>Case</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <caption>Gender</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Race</remote-alias>
            <ordinal>3</ordinal>
            <caption>Race</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <caption>City</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>5</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>LocationType</remote-alias>
            <ordinal>6</ordinal>
            <caption>LocationType</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Fatalities</remote-alias>
            <ordinal>7</ordinal>
            <caption>Fatalities</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Wounded</remote-alias>
            <ordinal>8</ordinal>
            <caption>Wounded</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>TotalVictims</remote-alias>
            <ordinal>9</ordinal>
            <caption>TotalVictims</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>NumWeapons</remote-alias>
            <ordinal>10</ordinal>
            <caption>NumWeapons</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>MentalIllness</remote-alias>
            <ordinal>11</ordinal>
            <caption>MentalIllness</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>LegalWeapon</remote-alias>
            <ordinal>12</ordinal>
            <caption>LegalWeapon</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (StateAbbrev)]</local-name>
            <parent-name>[StateAbbrev]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>13</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1 (StateAbbrev)]</local-name>
            <parent-name>[StateAbbrev]</parent-name>
            <remote-alias>Abbreviation</remote-alias>
            <ordinal>14</ordinal>
            <caption>Abbreviation</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>15</ordinal>
            <caption>City</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>16</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_2 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>17</ordinal>
            <caption>Latitude</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_3 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>18</ordinal>
            <caption>Longitude</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>19</ordinal>
            <caption>Location</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Fatal Rate' datatype='real' name='[Calculation_97179238061780993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_7])/SUM([v_9])' />
      </column>
      <column caption='Fatal Rate 2' datatype='string' name='[Calculation_97179238062448643]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_97179238061780993]&lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot; ELSEIF [Calculation_97179238061780993] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot; ELSE &quot;High&quot;&#10;END' />
      </column>
      <column aggregation='None' caption='NumWeapons (bin)' datatype='integer' name='[NumWeapons (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[v_10]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='City' datatype='string' name='[v_0 (LatLong)]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_0 (StateAbbrev)]' role='dimension' type='nominal' />
      <column caption='Year' datatype='string' name='[v_0]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_1 (LatLong)]' role='dimension' type='nominal' />
      <column caption='Abbreviation' datatype='string' name='[v_1 (StateAbbrev)]' role='dimension' type='nominal' />
      <column caption='NumWeapons' datatype='integer' name='[v_10]' role='measure' type='quantitative' />
      <column caption='MentalIllness' datatype='boolean' name='[v_11]' role='dimension' type='nominal' />
      <column caption='LegalWeapon' datatype='boolean' name='[v_12]' role='dimension' type='nominal' />
      <column caption='Case' datatype='string' name='[v_1]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[v_2 (LatLong)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Gender' datatype='string' name='[v_2]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[v_3 (LatLong)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Race' datatype='string' name='[v_3]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[v_4 (LatLong)]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[v_4]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
      <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
      <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
      <column caption='Wounded' datatype='integer' name='[v_8]' role='measure' type='quantitative' />
      <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_97179238062448643]' derivation='User' name='[usr:Calculation_97179238062448643:nk]' pivot='key' type='nominal' />
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[v_4]' />
        </groupfilter>
      </group>
      <group caption='Action (LocationType)' hidden='true' name='[Action (LocationType)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[v_6]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[v_5]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/stanley830720/Documents/My Tableau Repository/Datasources/federated.0dseact0pl027i1947yjw1dsk48v_0f2twxi0afrb6e19n969d1u8t0aq.tde' schema='Extract' tablename='Extract' update-time='05/02/2017 05:52:59 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[v_0 (LatLong)]' value='[Extract].[v_0]' />
            <map key='[v_0 (StateAbbrev)]' value='[Extract].[v_01]' />
            <map key='[v_0]' value='[Extract].[v_02]' />
            <map key='[v_1 (LatLong)]' value='[Extract].[v_1]' />
            <map key='[v_1 (StateAbbrev)]' value='[Extract].[v_11]' />
            <map key='[v_10]' value='[Extract].[v_10]' />
            <map key='[v_11]' value='[Extract].[v_111]' />
            <map key='[v_12]' value='[Extract].[v_12]' />
            <map key='[v_1]' value='[Extract].[v_13]' />
            <map key='[v_2 (LatLong)]' value='[Extract].[v_2]' />
            <map key='[v_2]' value='[Extract].[v_21]' />
            <map key='[v_3 (LatLong)]' value='[Extract].[v_3]' />
            <map key='[v_3]' value='[Extract].[v_31]' />
            <map key='[v_4 (LatLong)]' value='[Extract].[v_4]' />
            <map key='[v_4]' value='[Extract].[v_41]' />
            <map key='[v_5]' value='[Extract].[v_5]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
            <map key='[v_8]' value='[Extract].[v_8]' />
            <map key='[v_9]' value='[Extract].[v_9]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='64' timestamp-start='2017-05-02 17:52:59.417' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>LatLong</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>63</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aiken&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Watkins Glen&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (StateAbbrev)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>StateAbbrev</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Arizona&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wisconsin&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_02</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_02</remote-alias>
              <ordinal>2</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1982&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2015&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>3</ordinal>
              <family>LatLong</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AR&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1 (StateAbbrev)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>4</ordinal>
              <family>StateAbbrev</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AR&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>5</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>144.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2.25</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>9</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.5532863266952466</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.541103500742244</statistic>
                <statistic aggregation='Var' datatype='real'>2.4126984126984126</statistic>
                <statistic aggregation='VarP' datatype='real'>2.375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>476.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_111</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_111</remote-alias>
              <ordinal>6</ordinal>
              <family>MassShooting</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='boolean'>true</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>7</ordinal>
              <family>MassShooting</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_13</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_13</remote-alias>
              <ordinal>8</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;101 California Street shootings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Xerox killings&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_2 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>9</ordinal>
              <family>LatLong</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2401.6126859999995</statistic>
                <statistic aggregation='Avg' datatype='real'>37.525198218749992</statistic>
                <statistic aggregation='Min' datatype='real'>21.306944000000001</statistic>
                <statistic aggregation='Max' datatype='real'>48.051763999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.1797287151837486</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.1312595063328379</statistic>
                <statistic aggregation='Var' datatype='real'>38.189046993266579</statistic>
                <statistic aggregation='VarP' datatype='real'>37.592343133996792</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>92526.902047390366</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_21</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_21</remote-alias>
              <ordinal>10</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Male&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_3 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>11</ordinal>
              <family>LatLong</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-6195.4531460000026</statistic>
                <statistic aggregation='Avg' datatype='real'>-96.80395540625004</statistic>
                <statistic aggregation='Min' datatype='real'>-157.85833299999999</statistic>
                <statistic aggregation='Max' datatype='real'>-71.072830999999994</statistic>
                <statistic aggregation='Stdev' datatype='real'>18.717992912055244</statistic>
                <statistic aggregation='StdevP' datatype='real'>18.571182857837954</statistic>
                <statistic aggregation='Var' datatype='real'>350.36325865575031</statistic>
                <statistic aggregation='VarP' datatype='real'>344.88883273925421</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>621817.255362208</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_31</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_31</remote-alias>
              <ordinal>12</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Asian&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;White&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>13</ordinal>
              <family>LatLong</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>63</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;POINT(21.306944 -157.858333)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;POINT(48.051764 -122.177082)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_41</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_41</remote-alias>
              <ordinal>14</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>63</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aiken&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Watkins Glen&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>15</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Arizona&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wisconsin&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>16</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Military&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Workplace&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>17</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>513.0</statistic>
                <statistic aggregation='Avg' datatype='real'>8.015625</statistic>
                <statistic aggregation='Min' datatype='integer'>4</statistic>
                <statistic aggregation='Max' datatype='integer'>33</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.2508266544950386</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.20964306448868</statistic>
                <statistic aggregation='Var' datatype='real'>27.571180555555557</statistic>
                <statistic aggregation='VarP' datatype='real'>27.140380859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5849.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>18</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>453.0</statistic>
                <statistic aggregation='Avg' datatype='real'>7.078125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>58</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.01317336677119</statistic>
                <statistic aggregation='StdevP' datatype='real'>9.9346374611444688</statistic>
                <statistic aggregation='Var' datatype='real'>100.26364087301587</statistic>
                <statistic aggregation='VarP' datatype='real'>98.697021484375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9523.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>19</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>966.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15.09375</statistic>
                <statistic aggregation='Min' datatype='integer'>5</statistic>
                <statistic aggregation='Max' datatype='integer'>70</statistic>
                <statistic aggregation='Stdev' datatype='real'>12.681343314253748</statistic>
                <statistic aggregation='StdevP' datatype='real'>12.581880262405139</statistic>
                <statistic aggregation='Var' datatype='real'>160.81646825396825</statistic>
                <statistic aggregation='VarP' datatype='real'>158.3037109375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24712.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.643548' measure-ordering='alphabetic' measure-percentage='0.254839' parameter-percentage='0.101613' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_97179238062448643:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Low Fatal Rate' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range granularity='0.10000000000000001' max='0.5' min='0.0' />
        </column>
        <column caption='Medium Fatal Rate' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
          <calculation class='tableau' formula='0.69999999999999996' />
          <range granularity='0.10000000000000001' max='0.69999999999999996' min='0.5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.0dseact0pl027i1947yjw1dsk48v' type='datasource'>
        <exclude-sheet name='Bar graph' />
        <exclude-sheet name='Barcharts' />
        <exclude-sheet name='Crosstabs' />
        <exclude-sheet name='Boxplot' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bar graph' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_1]' derivation='None' name='[none:v_1:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column caption='Case' datatype='string' name='[v_1]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[Action (City)]'>
            <groupfilter function='level-members' level='[v_4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[Action (LocationType)]'>
            <groupfilter function='level-members' level='[v_6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[Action (State)]'>
            <groupfilter function='level-members' level='[v_5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[Action (State)]</column>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[Action (City)]</column>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[Action (LocationType)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_4:nk]' />
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_5:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_1:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barcharts'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Victims by Race and Location Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_3]' derivation='None' name='[none:v_3:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column caption='Race' datatype='string' name='[v_3]' role='dimension' type='nominal' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>([federated.0dseact0pl027i1947yjw1dsk48v].[none:v_3:nk] / [federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk])</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Boxplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Victims by Race of Shooter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_3]' derivation='None' name='[none:v_3:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column caption='Race' datatype='string' name='[v_3]' role='dimension' type='nominal' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_3:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstabs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Victims and Fatality Rate by Location Type and State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Low Fatal Rate' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.10000000000000001' max='0.5' min='0.0' />
            </column>
            <column caption='Medium Fatal Rate' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
              <calculation class='tableau' formula='0.69999999999999996' />
              <range granularity='0.10000000000000001' max='0.69999999999999996' min='0.5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column caption='Fatal Rate' datatype='real' name='[Calculation_97179238061780993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_7])/SUM([v_9])' />
            </column>
            <column caption='Fatal Rate 2' datatype='string' name='[Calculation_97179238062448643]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_97179238061780993]&lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot; ELSEIF [Calculation_97179238061780993] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot; ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_97179238062448643]' derivation='User' name='[usr:Calculation_97179238062448643:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v_6:nk]' member='&quot;Military&quot;' />
              <groupfilter from='&quot;Religious&quot;' function='range' level='[none:v_6:nk]' to='&quot;Workplace&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dseact0pl027i1947yjw1dsk48v].[usr:Calculation_97179238062448643:nk]' />
              <text column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_5:nk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Histogram'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Count of Cases with Number of Weapons</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column aggregation='None' caption='NumWeapons (bin)' datatype='integer' name='[NumWeapons (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[v_10]' peg='0' size='1' />
            </column>
            <column-instance column='[v_10]' derivation='Count' name='[cnt:v_10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NumWeapons (bin)]' derivation='None' name='[none:NumWeapons (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column caption='NumWeapons' datatype='integer' name='[v_10]' role='measure' type='quantitative' />
            <column caption='MentalIllness' datatype='boolean' name='[v_11]' role='dimension' type='nominal' />
            <column caption='LegalWeapon' datatype='boolean' name='[v_12]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_11:nk]'>
            <groupfilter function='member' level='[none:v_11:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_12:nk]'>
            <groupfilter function='member' level='[none:v_12:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_11:nk]</column>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_12:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[cnt:v_10:qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[none:NumWeapons (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0dseact0pl027i1947yjw1dsk48v].[NumWeapons (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mass Shooting Cases during Years with over 35 Fatalities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_2 (LatLong)]' derivation='Avg' name='[avg:v_2 (LatLong):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_3 (LatLong)]' derivation='Avg' name='[avg:v_3 (LatLong):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_1]' derivation='None' name='[none:v_1:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='Sum' name='[sum:v_10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_7]' derivation='Sum' name='[sum:v_7:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[v_0]' role='dimension' type='nominal' />
            <column caption='NumWeapons' datatype='integer' name='[v_10]' role='measure' type='quantitative' />
            <column caption='Case' datatype='string' name='[v_1]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[v_2 (LatLong)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[v_3 (LatLong)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='City' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_0:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;1999&quot;' />
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;2007&quot;' />
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;2009&quot;' />
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;2012&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_0:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_3 (LatLong):qk]' field-type='quantitative' max='-3393208.590372134' min='-18100896.257013369' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_2 (LatLong):qk]' field-type='quantitative' max='10615379.217529912' min='156945.09847371047' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]' />
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_4:nk]' />
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_10:qk]' />
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_5:nk]' />
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_1:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_2 (LatLong):qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_3 (LatLong):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Scatterplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Weapons vs Fatalities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='Sum' name='[sum:v_10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_7]' derivation='Sum' name='[sum:v_7:qk]' pivot='key' type='quantitative' />
            <column caption='NumWeapons' datatype='integer' name='[v_10]' role='measure' type='quantitative' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_10:qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Bar graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Barcharts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Crosstabs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dseact0pl027i1947yjw1dsk48v].[usr:Calculation_97179238062448643:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar graph' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Barcharts' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nO29Z3BcZ5qo95xzOje60Y0GGjkSAEEwASSYKVESlUez0uzM7oS9Dteuctll
      l+0ft8pb9i3X1C1fp1suX3urXLveXd+1Z3ZnRjMcicoSKeZMgggEARAZaORuAB2Ajueczz8A
      BpESQYlIYvdThSp09+nv/c7p854vvEkSQggyZEhT5PXuQIYM60lGATKkNRkFyJDWZBQgQ1qT
      UYAMaU1GATKkNRkFyJDWZBQgQ1qTUYAMaU1GATKkNRkFyJDWZBQgQ1qTUYAMaY3h4TeEEGQc
      RDOkC48owMzMDIlEYj36kgEIh8M4nc41lyuEQNd1FEVZsTaj0SiBQICysrLHHqeqKgbDI7fi
      qqOq6qMKkJubu+YdyXAfTddpHYmug2SBpmkoyv1b4rmdZTht5u/cYiAQYHJykuLi4scel0gk
      MJu/u5zvSiKReFQBHkWj82YXpVs247AaH3hfEBwdRXUXkGs3fuO3NypC11A1gcFgQJIeeF9L
      kdJkTKaVexJ+G3Rd8H9/2Lwush9ma2XeUynA94FlF8GJmQHOXLjI7RE/CJ3AhI/uO33Mx1RA
      RRMQmpngTncX03MRdDVFYHqC3u5OJmbCbMTlRCw4yrHf/pYPjr/LqWu3SGkJ+nt96EBk8jbX
      ++fWu4sZ1ohlR4Cejn6OvPUCPbcHiOTBycs3qC4tYtLvwhUeYVT2kh0YI5xI0XG7nxdf2sep
      Tz+hcvtO2i5c5J0fvo7hwUfseiM0mi9cZecr77Apx8ipTz6luyPOyc8us2XXdurKLHTePI+v
      JcG2g69SmZ3g3LnLJA3ZHH5+H77hAZKBMZw1h6grXvu5eoaVZZkRQOdO7wCTIxNMjPUxm1DI
      lpL4pkLYHRaEpqHqGuH5EMOjE4RmxgkuqORUb2P3zgacVjbeCCB0QoksyvLsyIoJb14edqeH
      yk1bOXhoPw6zjLuomrd/sJf+jiG6OlvJLttKiVvlVkcPXc0XiGZVUZmftd5nkmEFeKwCaNEx
      UrZattTWsaeumLGJOXYffomGag/N128BEpI+T+9gkCNHnqfE40SHDXjXP4AkYZHDzCxoCKET
      DM+imC0YZRmz1YoiS+R68rHasjDogkR8gYnxYYJJAwUF2VgL6nmhaTNmQ8aE8izw2ClQMqqz
      /9WDFOXayHUaGZwMMdDTjj+s0bj3EHZtlkp7Hs7NXpqv3SSvqp48lwNjRRmSJFNXW4ey0e4T
      ycDe/fX89lf/gDvXhGorY5/Xi08+y/GPP6epNvv+U0EWlJSU09vcjxYz4inQNtZ0LsNTI6Vr
      WhRdS5FICSxmE5IEQtfRNB3FaODhW1xXVXRkDGvw1B8aHuG/+ptLqy7nSfg//svXqShwfefv
      BwIBurq6eO655x573AbfBn02kRUj1gd2OiVZxiB//Q0uGwxr5jMiSxKv7qlaI2n3EYIlQ9j9
      M3VYTWvej7UmbRVgoyLLEv/5j/auuVxd11FVFZPp2b/pH2SjzdAzZFhTMiPABkPTBb/8d2fW
      XK4QIISO/A3TwO9CNBLCPzHCl33aY4/T9ZWV+6Toup6eCqCrSWbnQgjZiNvlxLA07xW6SmA2
      TF5uzhO1E5qbw2R3YDWt3GUUQtDSO7li7a0niWiE+cAMs9LGPZ+0mwIJoXHz/BdcutnO1UuX
      mJ5PoGsaiUQCNTHP+eZbJBMJkikVIQRqKkk8kUDTF93EU8kEiUQSIQQ9bbeYDa6H41qGlSL9
      RgChE5wK49lcx76dmzDIKhc+Os5AMEH11m3EJjo59tEMkbDOL358hE8/+JgUMtmVjRyqNPLe
      51cwaEm2v/ZTZFmBjF3ge03aKYAkG3jpJz/i+oXz/D9/f5aXX97PhFLGX/zFbkhGCMwEeevo
      YS589iVD7a3k7zrKc5tz+OT4l7TOpdj/w59Rlx3hDx/eoNxjWe/TyfCUpJ0CCF0nMBOm6cgr
      FFhP4ptLoqcipFQNSVVBLM4LJSFhthqIhaOoKTsJVZDnlInOx0kaQuiyCYm0tCE+U6SdAoAg
      MNTJ2YvnMZocPP/CZrL167z/3h/ZtG07RXmLC+CcglwKNlcwdvYU7x1PsWn7fuqKDJw6+Sl9
      KQOHXnuL+OQgFnMaXsJniPR0hbgb9yxJSJIECHRdIMnyI24QQtfRdB3FsOgioWsaAglZefTY
      lWAjuUI8LYu7QGN4yurWuyvfSHoqwAbG5/MxOb/2m3MCgaZqKxqbGwzOMdTfS8Pux1u2U2oK
      o2HtowpTaiodp0AbG0mS2LPl8TG0q8FquEIEAmYs6tyy55NxhsvwFVLq4y2ndzEo8tIU7vvN
      ep2DJEkZBdhoqJrOT/773z/RsX/zL96iIOf7H5m2Hm4Qd+WmnQLoWoq+oVFqN1USmhphMmFj
      c5mHqeEh7EXlZBkf/THiwSkG51S2VH79UD7S3UZW+TZyrOuTSWLDI3TG+tpp7R7B5CrkuQO7
      sBgUAhN9DM4aady8eF1FMsypLy8Q03Tqmw5RYE1y7cp1FjQjO/YexE2IC9fbUIWNPQf3k/L3
      0XZnGKPVy3NH9jDV28rtPh9ZeUXsbdhKV8t1xgMhCqu3sruumCunvsQf1aio301ljsTVy9fT
      zxVCQqfrRisLOnTfvsGVS9eIpxZovtFDIjpHy43r9I8FQE8QCIQZ6e9netrP5FwQNRlnYnIa
      /+QoHa3N9IxMoQuYnR5jPpFkpL+LmzdbCcVSgM5IbyftnX3EEwkGujtovdVDUl/vK7AeCDA5
      2b3/IK65HlqGZ0lF/Xz5yee09fnuHaVrGhVbdrKnoYbTX5xgQZeoqGugoa6Mc1+eJpnUqd/Z
      xPZSmc9OXEfIVhr37MPLAGeu+jDZXezZf5DkdB8dg2PkFFawb+8uOs6fIJBQySmt48C+Jnou
      niAQh4otDWmoALKJOq9Ez3SU+aSB0lzB1MgYqsvOjTPnUU02Wk9+wlQ0yLF/+g037viQZRlJ
      T9F6/iRjs1EunT+FsDjovHyO8dl5JCSEmiI8n8Asxzl97hq+zis035kGLcngnVa6fUG08ABX
      24fW+xKsPZJCQZGXoY4WLvRNU+qxcfPCZcp278Ntu7/oVqxu5NgUpz49jbe0hhxXDmpkmrOn
      T+IqryWnqIToeB+fX2incnMZ+YVexu60cKrDT32dl1x3Fl3t17kzME9JYREOY5JrFy8QN+ST
      bbbjsmpcPv0JC84SCr25pEKT6acASBJlWzcxeLOZmF6IN8vFQI+PfKeZhCWfph317NvswRdM
      Ysup5M1Xn8OdZaH/5lnuRMzs3FyE5Cxi6+Ya6ssKiMTjAKipOMPDg/QMjjE7F2BgJMS+w3vZ
      sb0eEQ8w5Z9idDZCNDq7zhdgfZAkAzl5BdSUuLlzu4WbnaPoC0GG7/TgD993KLQ5XFRvqWXB
      P0FcA7vDRfXmOvyTE4CE3ZXD5s3lTI5NIWQDrrxCass9DPv8yAYzefnFFHnMTM9FMFmzKC6v
      xKaGCCZ1zGY7ZdVbkOIhIjENu8OVhgoAmHOqmGn9HE9tFaVFHm4NDpBXUIIeG2dwbJKO0Rny
      7AZysnMwGRQQgvJt+8iXIrT3TCKSMfzTU/SNTmI3m0GSCM9Nohrd7N25FbNBpsBl4XZ3P+OT
      k0hGB96iUnZsa2RTSdF6n/6aI7QUAwND2HPzqCjKJqi5eOXNo7hsFizOLGShMdDbz9RQH6GU
      keLycojNMj0xSkQ3UFhSRiI6i6+/F83spLKsjGRglr7+EazZHipLCwhNz9LZ2Y8rJ48Cj43J
      0WF8kyHyCwvJNsYJB/0Mz8bxFpdjVaKMjQyxIEzptwgGkBQbL739Z+SXu7BLVl4++gKFhQXk
      Hmyi+XYnefXPUZ7tQtppRAJM2Xlsq83Bs3sb/QPjaMkIt7u6Kdt5kGKPA0fNdgyObKRQkMHJ
      CPv27mJTcS6JG80Mjmhs37KLZE8Hw6NTVNfnr/fprz2SjJSM0dE+jGQp5vUDW7AbFfRUKba8
      edx2E/7BefI2ebl14xYpVafp6Ot4zHFutHSSlBRePnoUuxrg5u0OVN3A0TcPEpvo43b7IAZT
      Ni++sJWR29dob2vF5q7gQH0VXR1tDA/HKNrzMlU5ds63tzM2LNjUcIQyp6C5pTNjCf62CF2l
      ua2T3Q3bV2X/+tu4QqzkNujqGMKeLCvEhsoOneHxSLKBpsYdq9a+QZE5/j/+bNXa34jo+vps
      jem6/ugI4Pf7M/UB1pFIJILD4VhzuatRH0DX9cW422We7o8bAVKpFFNTU5SUlKxYv74i9+E3
      8/LyVlxQhifH5/MxPLf2s1KBQNP0e/HRK4MEKLBM3ISq6hgMX39MLJrg9q0BNPvT+0cd3Fby
      lWnrE/gC6fj6e1hIgdnmorQ4h9HhaUqrSvim50RsIUhoHgryv3tGsbVg0c1ZoCjKV+sD6Cqq
      LmE0rI9VV9MF/+tvng136JVATcaZG+vl1ODTK+b7//qnj7y3TKsprp+/TiKZpPXqeQbGJuls
      7UcTOqFZP6OjY0STKgiNmekJJv2zBGcmGBiaRWhJQpHohsyTm5j38/Gxd3n/vXe51N6LpiUZ
      HZlEB+anurk5EFzvLmZYI5YZASQMRgvZTjtC0pEVBVmW0dUU3R23SGhJWrpH2VFk4GrnGF5v
      LqVFbiRU2i6eIp63g311trU5kydFaLScP0vFwTeozzfz+Yef0K2EOfHpZep37aC21ERX21WG
      W2I0Pv8KZY4UF85fJGHM4fCh3YyPjaLNjmMsaaS2KFMf4PvOMgogiM3PMjA0gpZajJyCxUQI
      ulAJhBYIzM1h1l0cfOEoJbl2/L4OTlw+i7NsC794fgMafYTObMxBY/FiFujiwgKsNhdl5bXs
      3bcLNXAbk9PLm3uyOXmpj3BOgOzyHVii/bS232G08zzZmw5zNM++3meSYQVYZgokcHkrOHz4
      eaoLswmGw4BgPjjGWMTM26+/jCfLhFFWmY0skErEUXWFzdsb0CIjTERSa3IS3wpJQhER5pe6
      trAQQjaZMRlN2LKyMMgSRYVlZDmyMeoQjwXp6WpjcDpKjseGrWgbP3i+EYsx4/n5LLCMAhix
      mef56IPjBOQctlZVUFFTgsNZgFeZ5fjnlyirrWP/voOMdV7ii3OXwOamqraGn/3kVfr77qBv
      uEWAwr49mzj+q9/w+efvMbhgJD8/n2wmOXH6AqGEuH9RJJ2CglIkCRTJgK5JGKS09B55ZvnO
      luC7X7u7rfTw642MEIKF8BzRpI4z24XFZCAZj7IQS2J32AADJgUSSQ2jUWY+EkYVCllZNoSm
      YzavXgblZykofiW4uwuUV7n9qdt6/1//9Ntug34zD9/o34cb/y6SJJGVncODTgQmiw2T5asL
      drN58WnvzHbff3OVbeeSJLF3HWKCEQJdiHVLUvtNcpPxKD5ljk2rdE0yvkAbjNHR0VWxei7H
      etYHeFxQfCQS4erVq7z88surIjczoc2Q1mSc4TYYui7439+9sg6SF5ODrfQU6E+fr6P8KeqM
      rTZppwAPOn0JXUcXoCgSuqYvZob7mrWMlkywkNRxZlm/ts1oOITB5sRkePp1kC4EZ1qHnrqd
      jcILjeUrqgBCCFRNw7D0+2lLnqSKwYC8lOVPU1V0AZIkoxiUx2bwS7spkFBj/OHYx2jA7Qsf
      8g/vX0JD5cLHnzCT/AaHrMAIN7r7v7HNOzfPMRV9slw+GZ6Oyc5L/Kv/7f9ici7Ojc/+kb/7
      9e/44/vHmYsv/XYixq/+z3/Lb9/9PV+cv7Vs+uK0GwEkg5lyS4LRBY1ACgrMAeYC0/hlN2PN
      X/JR3ySS0cXPfnKQkx9dZy4SYueOWmTZzGRfC51TEvrMbYJJA/MpKz96+3Vk2YAWj3Dy3Glm
      IlGK6w+yq8zIB++fBlce+xuquXbpCildYu8r71BT8P3P5bMupEJ82jLMgd21aHqS8ekUew+9
      RG1JEVmWxWe5Hg2QclRy5PlDFBd4l33Cp90IIEkym+sK6OocIjqfRV52NiN3RvDkyAzOGPj5
      L37OPm+S7kCMvhE/L/3gDSrynfgH27jQNkrTrs0sGD38yTs/YXdRFhPBCACywUR+SRlFRfn0
      dt6i7UYbDa++xY/fepnozCDGnDIqKz10tLev8xX4fiKEzoU/vkt14yEMyRixWIq6xp3Mj/Xz
      u7/5e3zhJdO+IZsd24ro6bjCv/v9pySWibVJOwUACWd5HVNXPsJYVEOJx0173yD57lx0UiDJ
      qAhkJDZV1VHgcSIDisG0VC5JRULBoMjEE/GleSfMTg/SOxqkvLQMm0VBFgYEi2VPEaCYLXjy
      K9hZv/Y1gJ8JBODwEBy8RWdXNz0Do7hLqnnuyEs01Jjon5wnFo2iqhK12xp4+eVXKNDmiS0z
      B0q7KRCAbMwh121jc20+XsWMtXsIb1k5IjrKe+8dQzI6eMdjJex2LB1vprJuF8WWJC03O1HD
      oxw7dgyT1cvWnGwmsnMwOF3IC23caF0gy+1l+84yPvviBHecuezaVo02epP2oELNjn3rfPbf
      TyRZ5vCbfwpAe0keBaXldF07xWfTYTB7+dNKJ1c//ZidBxo5deI0kWSK/ModOJZ5xGcMYQ8i
      BKqaQlJMfFNglNCSfHr6Iq+++DzKQ7tGuqaBJN3bShRLdQhkWX5gx+nxv8iz5grxy39+hMaa
      wsce850NYUKgaRqyYngoqElHE0vBTsvITcsR4BuRJAzGZSyhspEXDu5/5OYHkB+Kp5XuFeBY
      fII9if+oLEv8Fz/a8216vSIIQFvaXlxJyrzZK9reV5AklK+JJZa+RdLbTFD8BmMtguK/znFx
      NYLin5THBcUnk0kmJiYoLy9fFbmZKdAGYy18gQYGBgiHwzQ0NNx7b6P6Aq223MwUaIOhaTq/
      +FfHVlXG/Nw0qUQUd8Gice9f/OwgDdVpmLGOZXeBkpw/eZ0DRw/xsJVfSwUZGIxRXVvI7FA/
      MwYXtSWe1evpCiKESm97CzMxlYra7RS6bcTjScxWC4nQOBNRB5WFa5+bBxbn4gvx1Y2kiyZS
      qAkV05IcbZ0SU20Elk2LEltYWDIn63Reu0Dn0BSe0i0UKj4+ujjO3tkmdpQ50HVB/82zdAzP
      Elfh6Ft/wnjrSbpG5vBWbee53fUY5A0QMyAEgzfP0BN2sbXMycXTpzl0uIFLZ9rZtX8HNm2c
      jjEH8aCBkspKsoyC0ZERVCWL0pI8FqIxpHgE1ZJDTtbaD9sZVpZvNQXKzitka5aTq9f62P3O
      Tjb7vext3EJ89DaBpAFHcI5NTUcwj1xibGaKW0MJfvynb3PqxGcEwpsocG2EyuoqvcMJXnyn
      CbsMc+N+ZqcCzAT8zMwFMdp1Bvs7ydNtDPoFmz1z9IwnMKRmicR3MXDrAvGUmcOvvMkzUJ0o
      7XkyS7AQaLFZrlzrIByLIyGjGE2AwGwywdJuq2w043A6MBqNIJLYbB7MJjMOsxFN2yDDrAD1
      wWW/LGN351JaWs3Ohu1kmRV27D7C/oNNiOA8U1M+QpEw4ViUwOwUKcnC62//iBLPBkv3kuE7
      scwIIDMz1s37x8JU1tejx+OMDgwRjiso5hziUx/z5RWFRq8Bi9GAohhQJMBgwmTJwxw9z7H3
      JlAlN03OjfD0BySFqrw4V1uH2Vdjo290ghe37UROzBFciKMIuJ/NS2Aw2SmrrqUqz4KmC5rD
      MVyZWmDPDN9qG1TXVFQNTKZFvRGahoaE8o1V0wWxWBKLxbShYoaFnuTqmS8Yj2jsaHqO6uIc
      xnrbaB/w09BYh4qbUg/0DUYoK7Jw6fJV5lMGGnY3Eo/MU11Vtmp9WwtL8EJwGjURIzt/cW/9
      X/77z7G7tjCzDbocsrKYLeEukqIs04CE1brxFoqSbGLfiz+4+wqAouodFFUDknRPmaurF5Nf
      HXnp1cUjJQnycta2sxlWlYwhbIPh843icOeuqozhoSEikTDbti/WObBbjCiylBkBMqw/kgSu
      rNVdL83aTAjV9BU561WkYr3JKMAGQwjB7cHpVWm7wOPA4/z6uGbpAS/WdCKjAE/A3VoChm+o
      GaCpKpKi3AuOeRo0XfDf/u2pp27n6/hPfriLHxyoXZW2v6+kncrrqQRXrrcggMm+Ni60DiLQ
      6WttIfgNZdxjs2O09Q5/Y5v97VcJRL+PUwjB/OwUH79/nMFAjFR4nF//+tf8+te/4h9+9yHB
      qLreHVx10m4EkBSZ2cFBwrsa6B/uZzig0Fjn5nb/DAeLfHx0qZnc6kb21XsZHAoTmh7GarcS
      SRlJREMMjs5g0ucZGBjCXFjHgZ01xObDWJIxWjua8fkXaDr8IgVOA22XzzOVsnOwaStdNy/j
      j1t58aVD2FYgfcrKoOPr6yM8PcJ4MEFZZRE//9nP0CKj/Ob9W5hNz769I+1GAEk2sK3UxG1f
      mGjMSJnXwnifD2OuhfOnmtn1/FFCLacYCof5w2/+iRnseF02hBbl/CefgNVBa8ctdh4+SnKo
      neHpEABCh7ziGg7uruXsl2fpvnaSSSmfXfUVDN9pJmotY2eFwrnLt9f5CjyIwpa9h6ityr1X
      xksxGLh++ho7XjyAdcMo6uqRdgoAEoVbtzB65QxxcyX5Dhc9fSMUOrIweooozHGyfXMhgUiK
      mvqDvLBvG2ajQu+1M0wYcqkpysaQ5cXjsFFakE9SW5wmxOYDnD59kgvXb5MkxdScTOO2SvK8
      +chahN7uVq51jZPtXvttxuV48DYXiQC9szJ1xelh70hDBQDFXkK4/yql9WWUluXSM+ojt7Qc
      c3KY05eucOqOn0q3GZPBuLiwFYKava+wPUdw4mIn2sIM165e4WbfBJ4sO5Ikk4rHMJnt5GVn
      oWsStRU5nDl5lis3WpCtXpyOLLy5eViNG8QlBECk6GptpqN3kM62a4zNzNNy+jSbX3wBizE9
      bo20NIQJIQjN+LG5czFKGrPBCNkuN1o8zPikH4szj0KPnXAkhcNpRaQSxFSBxSgTDIY4e+ki
      jTsacDg95LgdJKMRZJOZ2ckJUpKRLKcDl8OGf2KSBAa8uW5CM9NEU+DJ8+KwfvMosJquEHd3
      ge5FhO3cTmBqioVECpBw5uQipRLYXS6Ma+i6njGErTGSJOHK9S69kvHkLA73Bls2lVX3g7id
      zsXLIxnN2I2L7+Xk5NCwYxcV5aX3/Jss9sXgmYLSr8ateovu57T3Fj5ZmKMkQW3p6gQWuR7O
      bSop5BYUkcviQ0HTNAyO9PJyTUsFeBokWaGqYvWc4RRZ5t/8Z68se1wqlULTNCyWbz+lMhqN
      jzxx76ZwSTcyCrDBEEB4YfmsHD7fCLH5ME1Nu7+1jNLS0q+XnVGA78Y31Qu7y0ZyhV6O9a51
      pmk6/96/fm/Z46KhAH/5541r0KNnm2WW+hrXT50htBQ8HfSPcKn5DrGFALcHRu4dFfP3c6Xj
      vqV0qvcanaMRbrfeIqY+aiHV1RStl77k008/5dMTF5l/XBC4UJmfjy6b5vrJEUz336b9jm8x
      7kWPc+3KDfyhCLc7O4ipKtdb20FboLWzB1VLEonGV0z6SqMnFzh/+gvee+893jv+AYP+6Hp3
      6XvFMiOASlfzBYKuKl7eVUr/zSvcGnewc1shLpsMCAa62xns6WTKVs+e2gW6OjsZ6GrF1bgJ
      MTpNWX09gbF+7gz5qdm2A2+2DV1L0to3yU9+/A4gYTUI+rramQ4mqdu2Dbsco/XmLRyFm8i3
      hXjvw3b2HGqgelM5g13tJEw57NpWQ3AmQCwUQGTlokXDTE1OkV2widoK72POSTDe28+5gM7m
      TcXERvu52X6bbG8RziwXJkljYtIPOzfjznIy2XOVD6/7Odi0g5qKPLpvd5NSsmlq3Exkdob4
      fJCQasST4yHXZWVqMkBeYf6a7S9LRiu79xwklYrzxe/+iGzZeHaGjcyyhbKLqneQGO5kIeJn
      LO6iyJ1FPBKgrz/A1O2L3ByaJz/XhSIL2s6dIJC04HFaF3M1ShIi4efM5W4KvDbOn71MUl80
      vGjzAdra2+i4M0gqGSehG3BbNU5daqbz7Gk0dxFqfB6j0YzRbMWZ7WT41iWmU3b08du0jEQ4
      /d7fcf7WMIoW5syVG2S5XbRea2ZZDxbdSH2uiZFQnD7fNJXl5YhUgs62ATRY6mCYjo5xLDY7
      NrsDd3YWWiKKweaCyTauDIS49Mmv+PLGHQzaPOcvtxCPRjh/teWx+ShXGkmSsWVlIaKzJN1V
      lDkyy7pvw7IPKt1gwZ2t0N3Sg7eyGCMsJZIUdPcFOHRkL6WFXhTiTISMNDVtozDXxV33ci02
      x8RsgK7eITR1nqRY/Lpsc1JSVExxQR6SmmCw+zY9fQMEw3FKNlcz1H6dibkFrE4Xnpx8Skvz
      mewdZHR4gNHZGLGZIPbcSt547Si5WUZyirawpaaSbKOV5Wq1CDRqd9dwp7mL2dkkebmOxSnW
      w5qjQrbLg8dbRFlxAcnwDJ1tLUzOzREKxrC6S3jttVeoqq4lV5vhVl8/zryKNVUAWAzxbLt8
      k4bD+9Zc9ved5ZJHIwmJ6vJ8rnT1UFboZfH2XfwryrVy+3Yfw75xUsKI05ygp2eAkfEZFguq
      CxSLE7fLRVVNHZurq+8l2NJ1DR1Q1RTzM5MkswvYWleF2aCRVOzsP7CXwFAPMc2IFB1neMxP
      bkUxBcXFbN1ZT0VpDkarHePdbMt3F97S8l6ZEhKG7Cr00XNo3kqyjHc/0Jc+v/9aMpiJ+ccY
      nZjGPzZMbl0jlcXZgITBYsNoVJBkI7XbKrj0xSXqt1c/2ZVfQcJTPsYkN3XF65PM6/uM8stf
      /vKX3/yxTJbTQV5xEXnefArzvThdWWS7XTiyHZRWVxCaGCOlOKip2UTNpmKmxiew5BRTU1lC
      Xm42TncBhdkGJqfnsLvzyc9xIMsKbruJmbkIsYROYXk5UjREJKVQW1ONw6AxMjpF+ZZtFHvz
      cGbJ+OcW2FS/HT04SSQJRcUleFxOHA4HsmLEmZWFw24ly+nA4bQ/VrMtDidZDlp3OooAABiA
      SURBVCd5BflUVJThdGThcDrJyXXjcGbhynLgcGST5XTg9ORgl+PMhJOUVVcTnBzDlF1EdUUJ
      +bkuHFlOZEmQXJhnLmVg746ap3oKB0MhPmv2LXtcKhHl8NZCqirKUDWNwrIKsm3f3Zq6nslx
      NU37xuS4qy03LV0hVho9ucCNq9fx1jRSUfB06cCHh0f4y3+4vuxxCyE///XbO3jpyMGnkneX
      dE2Om1GADcaTZoceHh4mEAiwe/e3N4R9HRkFWCJTH2B9edL6ACttsLvrCzQyMkJFRcWaxgc/
      rj7Aqst9+M28vLw170iG+4z4fHRPJtdcrhCClJpifGicQ4cOrelaIC29QYXQEcisV8JoXdcX
      63l9pbiUIJFMYTY/2TQglUwiGwwoK/i01HXBX/3x2oq1920Qus5mx9wDrzV0IS1b1+z7zDJn
      luLdv/5bfHNRtIVpLrc9Wi19wucjnlBBj3OjpYX4E8SGC6HRcvoLTpy/hf4dliBzg210jkW+
      9fcWheuM9bTw7u+P8bs/fMhU5L6bg55a4Oz11iduqqu1Ff/cs+l6MDPax2//8Z/41a//katd
      w4QmR/jd3/01l/qC6921FWXZ+gAGRePy5VZ+eKiEmdACkcAIZy+2oMlZHH11H58e+wOOsk3s
      PrAXm9FB1D/ESNxOTambW+2deF0mrtzswFVUy6E92zEqEloyxshCEqH2k1DrCY730XlngFAk
      hTvHhn86zOE33kKZ6eXSzU5yy+qpKXYwEwjhG59j7+4yDAlBLDjJmbOXMOSUsa3SzY0bt5At
      Obzw0gHuXD/LRCCE0VPBCwd2YVLuOuqpNF/rZP9rP6TALiOZDAx33qS5a4hNW7cTnBjik48n
      UY15vP5CI62XzzESWKC+6SCbPEbOnjlLOGXkyGuvkoqn0PRncw/BYMnmjXd+QnKqk1M9/VRa
      SinxKIwHn6314bKuEI78KnLlSQanFzXfYLKxZftOSsx+rg0kqKypY9+BgxTnmBnqm0SSZbrv
      dJIMD9M/GuP6lets33uYlH+A0cDi0zI650MyFpKnCEZDcWYmp8jy1rKzzktKzuVIo5fuwTku
      XbrB7oPPMz/WQ29/H19evkVdwzaMCT++QIyrF69QvvMQe7ZtwmLNYltDIy4xTutgkNHRSQ4c
      fQNjxMfCA+lOJNnIoed2c/Hj45y40ExiforLt6Z5/qWjlOU5kI0mmg4fxRQNMN7TwjgeXn2x
      iZar1+huvYSlqomju4s4caaV72MilCcl2+Mh5u/lszM32d3QiLeyhsrvSQWgb8OykzshYG9T
      A+3NHWgCxntaudF6m0hSQyQ1zEYjJpsNs0FBQiYrJw/DfJjWy7eoO7CN2fEpem53oCnZ2E2L
      c//+1g4ioTGm4iGaWwbQMeH1uLFaHHiyc7BYzUiozIxN0XXrFpjcWAwWXnj+CBUFOfdMtXHZ
      SHGem2yXi/HuZlraO4kmdURKw+zOxWmzYjYZvxL1LQS4Smr4xX/wz6g0B2nrH8PkKcDjcpKd
      ZcNk9+B12rCb7IRmQnjzC3C4cskz6PgDUQoL83EVV2GNBZ9p//m5kU6OfdnNq3/2z6gudAEg
      IR5IHf9ssMwUSEJWZMyeKmpyrnJjNkqdOUVM15iamiS3XKLYY+Lk55+x71ATyDooVho2O/i7
      8wH+5Rt2Ijur8EUimEwWFMWAlojQv+Dg5z99HQWVD3//HgvWYhwSIMPielJClozU76hgMj6P
      0WjFYLB/ZcEqA5sKbRz74AOKC7xk6UmiKZlYcIqKaumeZsvSQzqup7h84mP8qoH4TIimV/YT
      GjnJ744NULW5+v4TQdYp3lLHFx+fZLrDjOTcxIEahU+Pv0ubnKBkzw9RAj2wgo7aG4n2jlY0
      PcHZT4+TX7ODPDXAlcvtDIsg5c43aNpc9Ez4HS1jCBNomo4sKwixuCMgoxOLxTCYLRgUAzKC
      eDyOwWxGZqlYtK6RUDUsJhO6rpGIxZCMJszGRaebB03umrbouibJMpIQCCQkSaALCQmdeCyG
      YjRjNCiAhCxLCKEv9kUSJBJxJMWIQYJYPIHJbEZRDCD0exXapQeKWi+a/DVSyRSSwYDJYEDo
      KolkCqPJjMRiWKKmL35fTSaIJ1PY7IsKmIwtkBIydpv1kbZXgvWsFH93F+h//sv/FBCo6uJv
      IysGJPR7VX4Ug/ExNSG+PRt4G1S6d6NKkrL0dJSxZzm+cozV9lAgtaxgWcoqJssKVvtXi2k9
      uMf8lf3me7n5pcVKMyjY7I8W4pIkeelzCYvlvuyse15ti9+FxRoGX/2utFjJxnr/1CXFiNVq
      /Mpxd/tlNFswmu/H3ZptWZjvfW/l98plSeJIw8oXhV4WAZqmIgUXbRCKsljx5z4K62CrWnUe
      OaWFhQVSqdUt05nhm0mlkvxHr25Zc7lCCFRVpbU1TigUWlNLcCqVWqwrt8akUqlHFWDxCfns
      54TcqKzX9b87E96/f/+ay37YC7W5uZktW7Zge3hmsQpyH1GA1Raa4fHMzgX5q/ef3Bi3kuhC
      f3TTYC3kLq237qLODLJ79+4n8ol6Gp7IFUJLJQmHQ8gmKw67HUkSCCEhSRCcC+Jyu75XWR9A
      oCYTqELBbDIioRONxTGZzaipFCaTidnZOXI9bmKJFBazCV2IFXV3eGzvhOBq19iayNqoFMr3
      rfxCLG2EmKxIeoL5yAIYLDgddpQV8KN5/K8qBOc+/C3nr97g84/fo6V/gjm/j97eSYSucu7a
      NVKqjq7r9xIrPfj/g683Ep2nPuTvj51EE4JUZJy/+Zt/oGdkmt6+HhJqknPXmkGP0tk3iLow
      ydWO4Xvnoev6Q+eoo99NKnX3vfU+wWeI6NwYf/tX/wtXuwP0tV3m9PmLfPzuP9HcO74i7T9+
      BFD9zEkVvP3G8xCb5MNPbxM2TNA+lmJ6fi9iboh3/3iM2ILOOz9+i54rJxgKRDHmVPDWLifH
      zw6QlMz8+duvYN0wueYFGk7cxiThhIq/a4SK8gqUVJKAP4ZSt7gNikgQDqToiVzn7GUfocAu
      mrbkcuJ0M8lIlBd/9heMXfmI/vEw+eVVGOweXthVxacnrvD6my+xUc72e40W59zZc+w++iJx
      FbbseYHSuhBXTnyMtkJ2+MePAFoSDA4kCRSTFaNioqaxif37jnCooRZDTgU/+dGfsntzCQv+
      EfoDKaprqpj3dTCbTBGSHPzsnVc2XqZhXWX3jjxudk8xMTdHflEeutCJBuP3n95CIxpOUlO/
      g227j/DaC/twZrkpK8gl361yq2+O8MwUB15/h6OHGlkY6mcs4EeTLZmbf4UYuHmeiFKMV0mx
      EJlHaDHOfPgJ3eNBbOaVybL9+DvTlE18tptYUiMwNkjCasYoWDQ+SRLSUpFsGRlJlkExkltQ
      zKEjR7DJgsqqesxGZQOuEQSOiu0stJ0gLPLJWar8/nW9lCQZLZUCWcbXcQ09bxP1NSXIQmD3
      lpOX40QxO9hS6+LkZ2eoqN++tqfyDCNbHJiZp+XWHfr6+gnOq7zx81/w8zeauN07uiIyHj8F
      kh3s3VnMR8d/j2Swcuj5l8g2pYg0n+BcK3g9HmQkHG4X1uxCGqomuX7tOjaHl8KmfLzOjZik
      SSLbW4BZsVNc5cFevQlHIoBmtOIpcCNLMgWeHJBM5HodKPY8suPNfH5invqKQoZv3mBOiVHc
      YMEi5y6lEZcoLK2E5jE2l2QyM6wUFdv3U7EdQhOd9EcLGbl1lbahKVJC4cCLr62IjCeKCVbV
      FJJsuLfqFrqOWHJL+ApCLLkQKGy4h/5TcHfBK0sSmqYhGwxfGS30VIzm82dJ5VRzsOHp0qKs
      pyvERqFQnubf/Df//Gu3QXVNWwxkWoFduUxQ/AohdJXIfAy7w7HkovHd8fl8DM+t/U8iWKoP
      oKy9v0NKTWE03LcE93Xc4Mc/fGVN7ACZoPgNxpMGxa8065kX6OGg+NHRUfLz81fdPUJV1cwI
      sNF40rQoK026pkX5buOd0InFElht1uWPzfCtUDWdd/673653N9KGx64kFkZv8smVYYQe4//9
      67+ldyJIaNrHuYtXOXHpgcwFepRrN1tJJCK09wytcpefHiFSdFy7wJkzp/H5w4sKHY0hgFjQ
      R+9YeJ37l/lbq7/HjgC2gkpil68yXxHH6HIQmJvFJPlRrLnERy/xx/dniKs23nnrAJJmYqK3
      hY8/a2Vk+0727yjhy9PXESYHr/3gFdyPqYy4pgid3qsnGdVL2Flj59LZU0gHd3L+ZCuN+3eQ
      rQTo9M0yPy1TubkOp0lnsK+PlMFJdWUR4fl5pFgI1eolL3sDlTzN8J147AggGVyYlBj9fdPs
      aKxnzudn2uensNyLMSuXl1/9AcV2iWh0genxMAUVtdRtb+KVF/bSduUaJTsaKTZHuDO+gVJp
      CI2BccHz+7dTWFxFVYGbyFyYaDRKUlXRhc6obxApOcWFq330dzYzMBVmcqCFjp5hznx+nM/P
      3UR9RrNBpBvLpkfPy7LROTWDN7+SrOgId2YtFDmNyEYbTpsZk8GMYNGKKssKsqxgMhlJpVLE
      5iOY8yoocdvX4lyeGF3o9zxJdARWZw5FReVsqd+M3aSwteEQDbt2IEWi+P2jBALTzMzPE5qf
      RTc5+MHbP6TQnVn/PAssa02o3eQhkZJxZGWRV2jH6M3BLEvYLYurdpPVjCIrWGwmZHMW1sgw
      xz8+Td3O7UzcGWBkaIykuoGelpJCdZHOxat3mPH76BsP4HC5MCRnmZoNoeog3dsYE5itToor
      amjatZ/KQi8mWw4Oc8bb51lhxbdBF5Os6hgM8lLAu7zhUusJkaLl0hkmIxr1DfupKHAxOdhJ
      5/AMW7dVo5FNkRuGfPMU51u43nyTBdXAtu3bSCwsUFFWvKyM70rGEry2ZOwAG4yMAqwtGQXY
      YIyOjuLNL1xzubpYMoQZM4awDOuMybj2awxdl5AR6yJb6Mq6yc0owAZDCMH17pUJ9/uWglHX
      qVaXmkphWMbvp8zrJD/n0RxRT0tGAR5CCEFqKTh+PdB0wf/w/51bF9kbmf/4zUb+5PDmFW93
      Y23PrAmCoZYL/O4Px/jjex8w7A9/NYhdT3Hh2k3Q5rna2sHDO7izg210j8+vZYczrCJpOAII
      5saDHH7rRzjDPZy41I3nSAWXL15BcZfy3J4tRObnQZLIsbuR9RSdLdfoGZulcmsjmz0eLEmJ
      RMTP6TMXkJwlHGqqZWomyqZSL0PD45SVFXDj3Ckm5hUOv3AYT1bGZWKjkoYKAJKs0tPVgT52
      G7O7gY7rlyjadgh16Dq3Rpb2+LV5ursmsKtj9M/AoV1baBkao9IkMzBnYmDkPBWNL5Dsv0rr
      bY25eSObSjx037yD1x3n1piBt1+ux/C0ETIZVpU0nAItFoRXtAh3RiMc2lvB1ICPtqsX6Z9O
      kSWpd49CRiYcUamqrcJht6EYDfeumG62U5qbTXl5GUldXfQFkUCWJZTsTTSUpfjow88ZC2Sm
      SxuZtBwBUMxU7zzIZredj46fpqauivGIhMtmwGq33n8qSDrFlcV8duIcvWZBwlEGGJGBXIfK
      F2fPoIenqG1oInCjg9OnZ+j0TXF4wU9g3kiew8RsJAo8e5VVnhXS0BAmSMbiyBYrBkkQCUcw
      m01EgnNoigm3200qmcBmMRGNqeixIF19Q8SCM0TtBby6fytJ3YBJ1ggE/AijnVy3k4XgHAtJ
      DYvVRrbDwlxgFlVI5Hg8GA1PPtBmLMFfz2rsAqWpIUzCZLXe+9/hdALgecD6alz63GZTSGLH
      5XJitTvZWVmJbDCzuKRV8Bbc9wly5nhwPiDF4/V+t95JsLM6/zt996kQi1vA0jrUrb1baORx
      5LlWJ2lzGo4AG5tMTPDayk3LRXCGDHfJjAAbjJERHx/dnFxzuUIIhC6Q18F1XdO0dUnHomla
      Oq4BFtE1DSHJX80xL3QWonHs9iebby4W8DMtFfBboX4JwefX+lesvQyPJ/2mQEKj4/IX/OPv
      /8g//eb3jAaj9z7Sk/N8fvHGEzfVfvUaU7MLq9HLDGtE2o0AQuiMDgbY3vQ8W6sKUGS4eeYz
      Onwz1O5oIDHdy++OTRNNWPjp24c59emnBGMqJdv2s7vEyIefnUVVYf8PfowiGzZg5usM34a0
      UwBJNvDCW69y4fwlftsc5+jzjfSFHfzZn7+ElJpncqKc1148wuUTpxi53Yqlqok/3+Lh408u
      cMuvs+XFd6h3zvH+6WaqXGl3+Z450m4KJIQgIYy89OYPOVDuZGAqjGRYrMyoKDKyYsZqMmCU
      DQhdQ0JGURQMQiB0DYOkICsGZF2QKYb0/Sf9HmFCZ6DtEn2BKGgyh4/WoIQv8Idjx6jeWo8r
      azGFiz07i8ItlQycOMWxHkHBpl1sKzPwxZfv06lBw9G30Sb7vpWVN8PGIz23QYVAF2Kxyo0k
      AQ/UNXj4UF1D1XQMRiMSoKsqGmB4qEbASpFxhVhb0lMBNjAjPh/tvtiayxUIdG1jpEdfS7kZ
      BdhgZFwh1lZuZgKbIa1Jv0XwBkfTdP7D/+n99RF+N8lrGslNOwUQmsr49AzFhfksBP0EU2aK
      8xwEp6ex5HixGB79JZKRWcYjGhVFeV/b5uRQL7bCTTjNTz+gCmAuEn/qdjI8GWk3BRJC5eq5
      y8QFdLec54vTV0lqMa5dvMlCfJ6hgQGm5iIgVCKRGDNTU8z6pxicmEZXUwSDYcLBWXzDg0wE
      QugCJod7CMVTBKbGGBwaJprUAJ2ZyTFGxqZIpVJMj/sY9k0+kmUiw/qSdiOArJiocesMzCYI
      pQyUZMfxj08QtTvoOH+ahMVF4NwV3vzpy3zw288wuj3s21aGBNy5cY4ZYwnBgcu4SuoYHbzB
      i2/+YLGYdjJGf18/qVScruEZ9pTJnLrmo6DYSzw0zu3eCZymONMLB9lTV7DelyHDEmk3AiDJ
      VG2toLe1g2jCQ57DxdAdH95sIyEpl1defI7nNjvpm0mQlF38yZ+8Rr7LzmDLWVonNfY1VKI7
      Szi4fx+7KguYXbjvTBeNzjM1G2R8bJiuO+McevUljhzeh7YwTjiWZEFTGR8bXMeTz/Aw6acA
      gDW/humrx3FW11BWkENLbx9ebyGJ6BThWJKh6TmcFoVCbxFWkwGEoKh2J7bYDAPjYdA0dE1l
      bHIS89L+9czUIFFDLm+8+BxZZgPZZpmRqTni8RhCslBcVctzh15kd/3TFdLOsLKk3RQIQFLs
      7H3xZcqrcsiWrOzZG6ewpAS3McrJTz7AXdJIrduJqF3cnDBmudlc7aCoaTttt4dQ5yd4//gH
      FFU2UpbnYiZeg8mVx7zvNCcvhtiydQs7aoq5eOJLTow4OLRnN4Gblzl1boAdew+t9+lneICM
      IexBxF33Nolv8nIWeoqL19s4uHf3YiqgBw68eynvvvfg64c/+yYyrhBrS0YBviV3K6rLsrwq
      sQA+3yjmLPeKt7scQghUVV316uxfRzKZXBcLdDKZfFQB/H4/iURizTuTYZH1cgu4q9jrFZu7
      XnIzI8AGY72ehuk6AqTlLlCGDHfJKMAGYz2mAustez3lZqZAGdKazAiQIa3JKMAGZbDrJqdO
      nccfWr3oMDWxQOv1y5w5d4mJuQWEnqTl4mnOXGklntJWTe5d5vwj3OobBwQzvh5OnDjJwGRo
      VVMNRGZGuXD6FM1tXaSEnlGAjUjCf4fLvXNUlTi5ePY6qVW6I2YmJ8DiobLAzsXL1/C1nGFa
      ySdXTHOhbWRVb0Q1Nsv5E1/SdmeEZDTEmUutbNtRx7VTXzIfV5dv4Lugx/ny5EUKN22mJN9D
      bG4yowAbkcjkBJXbd1NRW0+WGmJhlTQgv7yarTVFTPqG8XhzuTM0z+6merbu2kFsfBp9VaQC
      6HTcuEHBtgbcdhPx6BwWTyWF+SWUeLJIJFOrIlWNjDLqj3Ono43+8QDBudmMAmxMllwnBIAA
      aXUUQI2FOPHx58QdFRxq3IKMji7EYtaMVQzRis8M09Y9jpxcYHxoiNn5OJJYVDcdVm/k0TWs
      2V6a9u4hOtXFaCCWUYCNiLOwgIGOVkYHuwjLWdhXKffQYHcriewitlYVEYsmqSlz0Hqzh66W
      W1iLclft5jDY8jj4/AGsioxiMWG1uokGhgjMTjLqD2MxrY4xzuAsxiHmSaoCSZfIduVktkE3
      Kn3tV+mbWKBx337yV6k6yvRoD7d7xwBw5Fewu66IG+dPE5RyOXygEatxdffn9VSU4al5Kkvy
      8A93cb1jmNrG/Wwqcq/a+DPj66O5oxd32WZ2ba3IKECG9CYzBcqQ1mQUIENak1GADGlNRgEy
      pDUZBciQ1mQUIENak1GADGlNRgEypDUZBciQ1mQUIENak1GADGlNRgEypDUZBciQ1mQUIENa
      k1GADGnN/w/UklH/4UEL4QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Boxplot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstabs' width='192'>
      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
      IcQf3XE9A9qTg8wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Histogram' width='192'>
      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
      nG/01/UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      jp2dHffM/wezehAhuibkFwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scatterplot' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
