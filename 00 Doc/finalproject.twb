<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0327.0758                               -->
<workbook source-build='10.1.7 (10100.17.0327.0758)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='Low Fatal Rate' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
        <range granularity='0.10000000000000001' max='0.5' min='0.0' />
      </column>
      <column caption='Medium Fatal Rate' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
        <calculation class='tableau' formula='0.69999999999999996' />
        <range granularity='0.10000000000000001' max='0.69999999999999996' min='0.5' />
      </column>
      <column caption='High Fatal Rate' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
        <calculation class='tableau' formula='0.69999999999999996' />
        <range granularity='0.10000000000000001' max='1.0' min='0.69999999999999996' />
      </column>
    </datasource>
    <datasource caption='&quot;andyzhang/final-project&quot;' inline='true' name='federated.0dseact0pl027i1947yjw1dsk48v' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='&quot;andyzhang/final-project&quot;' name='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri'>
            <connection APIVersion='' authType='none' authentication='no' channel='http' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;andyzhang/final-project&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50Omplbi1jaGkiLCJpc3MiOiJhZ2VudDpqZW4tY2hpOjoyNTFmNWY1NS1jNzU4LTRjZjItYjcyZC0yMWU1NTE5ZDE3ODQiLCJpYXQiOjE0ODQ3MDY4MTgsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.4Sn22xO4wnG8BI7w8IW2foQudOpn9jJ7QynZxBXlkHKaNaCz5Z777ZyrIp2RDPtcIIqvdzb_xhfOZW7lh7O7_Q&quot;}' connectionName='&quot;andyzhang/final-project&quot;' filename='' increment-key='' path='/' port='80' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[MassShooting].[v_4]' />
                <expression op='[LatLong].[v_0]' />
              </expression>
              <expression op='='>
                <expression op='[StateAbbrev].[v_1]' />
                <expression op='[LatLong].[v_1]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[MassShooting].[v_5]' />
                <expression op='[StateAbbrev].[v_0]' />
              </expression>
            </clause>
            <relation connection='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri' name='MassShooting' table='[MassShooting]' type='table' />
            <relation connection='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri' name='StateAbbrev' table='[StateAbbrev]' type='table' />
          </relation>
          <relation connection='webdata-direct.1izdigs0v2ea9e1c1nq1n0yk7gri' name='LatLong' table='[LatLong]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (LatLong)]' value='[LatLong].[v_0]' />
          <map key='[v_0 (StateAbbrev)]' value='[StateAbbrev].[v_0]' />
          <map key='[v_0]' value='[MassShooting].[v_0]' />
          <map key='[v_1 (LatLong)]' value='[LatLong].[v_1]' />
          <map key='[v_1 (StateAbbrev)]' value='[StateAbbrev].[v_1]' />
          <map key='[v_10]' value='[MassShooting].[v_10]' />
          <map key='[v_11]' value='[MassShooting].[v_11]' />
          <map key='[v_12]' value='[MassShooting].[v_12]' />
          <map key='[v_1]' value='[MassShooting].[v_1]' />
          <map key='[v_2 (LatLong)]' value='[LatLong].[v_2]' />
          <map key='[v_2]' value='[MassShooting].[v_2]' />
          <map key='[v_3 (LatLong)]' value='[LatLong].[v_3]' />
          <map key='[v_3]' value='[MassShooting].[v_3]' />
          <map key='[v_4 (LatLong)]' value='[LatLong].[v_4]' />
          <map key='[v_4]' value='[MassShooting].[v_4]' />
          <map key='[v_5]' value='[MassShooting].[v_5]' />
          <map key='[v_6]' value='[MassShooting].[v_6]' />
          <map key='[v_7]' value='[MassShooting].[v_7]' />
          <map key='[v_8]' value='[MassShooting].[v_8]' />
          <map key='[v_9]' value='[MassShooting].[v_9]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <caption>Year</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Case</remote-alias>
            <ordinal>1</ordinal>
            <caption>Case</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <caption>Gender</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Race</remote-alias>
            <ordinal>3</ordinal>
            <caption>Race</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <caption>City</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>5</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>LocationType</remote-alias>
            <ordinal>6</ordinal>
            <caption>LocationType</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Fatalities</remote-alias>
            <ordinal>7</ordinal>
            <caption>Fatalities</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>Wounded</remote-alias>
            <ordinal>8</ordinal>
            <caption>Wounded</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>TotalVictims</remote-alias>
            <ordinal>9</ordinal>
            <caption>TotalVictims</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>NumWeapons</remote-alias>
            <ordinal>10</ordinal>
            <caption>NumWeapons</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>MentalIllness</remote-alias>
            <ordinal>11</ordinal>
            <caption>MentalIllness</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[MassShooting]</parent-name>
            <remote-alias>LegalWeapon</remote-alias>
            <ordinal>12</ordinal>
            <caption>LegalWeapon</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (StateAbbrev)]</local-name>
            <parent-name>[StateAbbrev]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>13</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1 (StateAbbrev)]</local-name>
            <parent-name>[StateAbbrev]</parent-name>
            <remote-alias>Abbreviation</remote-alias>
            <ordinal>14</ordinal>
            <caption>Abbreviation</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>15</ordinal>
            <caption>City</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>16</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_2 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>17</ordinal>
            <caption>Latitude</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_3 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>18</ordinal>
            <caption>Longitude</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4 (LatLong)]</local-name>
            <parent-name>[LatLong]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>19</ordinal>
            <caption>Location</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Fatal Rate' datatype='real' name='[Calculation_97179238061780993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_7])/SUM([v_9])' />
      </column>
      <column caption='Fatal Rate 2' datatype='string' name='[Calculation_97179238062448643]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_97179238061780993]&lt;= [Parameters].[Parameter 1] THEN &quot;01 Low&quot; &#10;ELSEIF [Calculation_97179238061780993] &lt;= [Parameters].[Parameter 2] THEN &quot;02 Medium&quot; &#10;ELSE &quot;03 High&quot;&#10;END' />
      </column>
      <column aggregation='None' caption='NumWeapons (bin)' datatype='integer' name='[NumWeapons (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[v_10]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='City' datatype='string' name='[v_0 (LatLong)]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_0 (StateAbbrev)]' role='dimension' type='nominal' />
      <column caption='Year' datatype='string' name='[v_0]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_1 (LatLong)]' role='dimension' type='nominal' />
      <column caption='Abbreviation' datatype='string' name='[v_1 (StateAbbrev)]' role='dimension' type='nominal' />
      <column caption='NumWeapons' datatype='integer' name='[v_10]' role='measure' type='quantitative' />
      <column caption='MentalIllness' datatype='boolean' name='[v_11]' role='dimension' type='nominal' />
      <column caption='LegalWeapon' datatype='boolean' name='[v_12]' role='dimension' type='nominal' />
      <column caption='Case' datatype='string' name='[v_1]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[v_2 (LatLong)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Gender' datatype='string' name='[v_2]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[v_3 (LatLong)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Race' datatype='string' name='[v_3]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[v_4 (LatLong)]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[v_4]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
      <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
      <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
      <column caption='Wounded' datatype='integer' name='[v_8]' role='measure' type='quantitative' />
      <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_97179238062448643]' derivation='User' name='[usr:Calculation_97179238062448643:nk]' pivot='key' type='nominal' />
      <group caption='Action (Case,City,State)' hidden='true' name='[Action (Case,City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[v_1]' />
          <groupfilter function='level-members' level='[v_4]' />
          <groupfilter function='level-members' level='[v_5]' />
        </groupfilter>
      </group>
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[v_4]' />
        </groupfilter>
      </group>
      <group caption='Action (LocationType)' hidden='true' name='[Action (LocationType)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[v_6]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[v_5]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/stanley830720/Documents/My Tableau Repository/Datasources/federated.0dseact0pl027i1947yjw1dsk48v_0f2twxi0afrb6e19n969d1u8t0aq.tde' schema='Extract' tablename='Extract' update-time='05/02/2017 05:52:59 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[v_0 (LatLong)]' value='[Extract].[v_0]' />
            <map key='[v_0 (StateAbbrev)]' value='[Extract].[v_01]' />
            <map key='[v_0]' value='[Extract].[v_02]' />
            <map key='[v_1 (LatLong)]' value='[Extract].[v_1]' />
            <map key='[v_1 (StateAbbrev)]' value='[Extract].[v_11]' />
            <map key='[v_10]' value='[Extract].[v_10]' />
            <map key='[v_11]' value='[Extract].[v_111]' />
            <map key='[v_12]' value='[Extract].[v_12]' />
            <map key='[v_1]' value='[Extract].[v_13]' />
            <map key='[v_2 (LatLong)]' value='[Extract].[v_2]' />
            <map key='[v_2]' value='[Extract].[v_21]' />
            <map key='[v_3 (LatLong)]' value='[Extract].[v_3]' />
            <map key='[v_3]' value='[Extract].[v_31]' />
            <map key='[v_4 (LatLong)]' value='[Extract].[v_4]' />
            <map key='[v_4]' value='[Extract].[v_41]' />
            <map key='[v_5]' value='[Extract].[v_5]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
            <map key='[v_8]' value='[Extract].[v_8]' />
            <map key='[v_9]' value='[Extract].[v_9]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='64' timestamp-start='2017-05-02 17:52:59.417' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>LatLong</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>63</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aiken&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Watkins Glen&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (StateAbbrev)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>StateAbbrev</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Arizona&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wisconsin&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_02</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_02</remote-alias>
              <ordinal>2</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1982&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2015&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>3</ordinal>
              <family>LatLong</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AR&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1 (StateAbbrev)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>4</ordinal>
              <family>StateAbbrev</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AR&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>5</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>144.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2.25</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>9</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.5532863266952466</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.541103500742244</statistic>
                <statistic aggregation='Var' datatype='real'>2.4126984126984126</statistic>
                <statistic aggregation='VarP' datatype='real'>2.375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>476.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_111</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_111</remote-alias>
              <ordinal>6</ordinal>
              <family>MassShooting</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='boolean'>true</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>7</ordinal>
              <family>MassShooting</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_13</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_13</remote-alias>
              <ordinal>8</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;101 California Street shootings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Xerox killings&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_2 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>9</ordinal>
              <family>LatLong</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2401.6126859999995</statistic>
                <statistic aggregation='Avg' datatype='real'>37.525198218749992</statistic>
                <statistic aggregation='Min' datatype='real'>21.306944000000001</statistic>
                <statistic aggregation='Max' datatype='real'>48.051763999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.1797287151837486</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.1312595063328379</statistic>
                <statistic aggregation='Var' datatype='real'>38.189046993266579</statistic>
                <statistic aggregation='VarP' datatype='real'>37.592343133996792</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>92526.902047390366</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_21</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_21</remote-alias>
              <ordinal>10</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Male&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_3 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>11</ordinal>
              <family>LatLong</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-6195.4531460000026</statistic>
                <statistic aggregation='Avg' datatype='real'>-96.80395540625004</statistic>
                <statistic aggregation='Min' datatype='real'>-157.85833299999999</statistic>
                <statistic aggregation='Max' datatype='real'>-71.072830999999994</statistic>
                <statistic aggregation='Stdev' datatype='real'>18.717992912055244</statistic>
                <statistic aggregation='StdevP' datatype='real'>18.571182857837954</statistic>
                <statistic aggregation='Var' datatype='real'>350.36325865575031</statistic>
                <statistic aggregation='VarP' datatype='real'>344.88883273925421</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>621817.255362208</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_31</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_31</remote-alias>
              <ordinal>12</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Asian&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;White&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4 (LatLong)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>13</ordinal>
              <family>LatLong</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>63</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;POINT(21.306944 -157.858333)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;POINT(48.051764 -122.177082)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_41</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_41</remote-alias>
              <ordinal>14</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>63</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aiken&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Watkins Glen&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>15</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Arizona&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wisconsin&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>16</ordinal>
              <family>MassShooting</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Military&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Workplace&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>17</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>513.0</statistic>
                <statistic aggregation='Avg' datatype='real'>8.015625</statistic>
                <statistic aggregation='Min' datatype='integer'>4</statistic>
                <statistic aggregation='Max' datatype='integer'>33</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.2508266544950386</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.20964306448868</statistic>
                <statistic aggregation='Var' datatype='real'>27.571180555555557</statistic>
                <statistic aggregation='VarP' datatype='real'>27.140380859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5849.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>18</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>453.0</statistic>
                <statistic aggregation='Avg' datatype='real'>7.078125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>58</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.01317336677119</statistic>
                <statistic aggregation='StdevP' datatype='real'>9.9346374611444688</statistic>
                <statistic aggregation='Var' datatype='real'>100.26364087301587</statistic>
                <statistic aggregation='VarP' datatype='real'>98.697021484375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9523.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>19</ordinal>
              <family>MassShooting</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>966.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15.09375</statistic>
                <statistic aggregation='Min' datatype='integer'>5</statistic>
                <statistic aggregation='Max' datatype='integer'>70</statistic>
                <statistic aggregation='Stdev' datatype='real'>12.681343314253748</statistic>
                <statistic aggregation='StdevP' datatype='real'>12.581880262405139</statistic>
                <statistic aggregation='Var' datatype='real'>160.81646825396825</statistic>
                <statistic aggregation='VarP' datatype='real'>158.3037109375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24712.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.643548' measure-ordering='alphabetic' measure-percentage='0.254839' parameter-percentage='0.101613' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_97179238062448643:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;02 Medium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;01 Low&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;03 High&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Low Fatal Rate' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range granularity='0.10000000000000001' max='0.5' min='0.0' />
        </column>
        <column caption='Medium Fatal Rate' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
          <calculation class='tableau' formula='0.69999999999999996' />
          <range granularity='0.10000000000000001' max='0.69999999999999996' min='0.5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.0dseact0pl027i1947yjw1dsk48v' type='datasource'>
        <exclude-sheet name='Bar graph' />
        <exclude-sheet name='Barcharts' />
        <exclude-sheet name='Crosstabs' />
        <exclude-sheet name='Boxplot' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bar graph' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_1]' derivation='None' name='[none:v_1:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column caption='Case' datatype='string' name='[v_1]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[Action (Case,City,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[v_1]' />
              <groupfilter function='level-members' level='[v_4]' />
              <groupfilter function='level-members' level='[v_5]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[Action (City)]'>
            <groupfilter function='level-members' level='[v_4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[Action (LocationType)]'>
            <groupfilter function='member' level='[v_6]' member='&quot;Workplace&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[Action (State)]'>
            <groupfilter function='level-members' level='[v_5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[Action (State)]</column>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[Action (City)]</column>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[Action (LocationType)]</column>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[Action (Case,City,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_4:nk]' />
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_5:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_1:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barcharts'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Victims by Race and Location Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_3]' derivation='None' name='[none:v_3:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column caption='Race' datatype='string' name='[v_3]' role='dimension' type='nominal' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>([federated.0dseact0pl027i1947yjw1dsk48v].[none:v_3:nk] / [federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk])</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Boxplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Victims by Race of Shooter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_3]' derivation='None' name='[none:v_3:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column caption='Race' datatype='string' name='[v_3]' role='dimension' type='nominal' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_3:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstabs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Victims and Fatality Rate by Location Type and State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Low Fatal Rate' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.10000000000000001' max='0.5' min='0.0' />
            </column>
            <column caption='Medium Fatal Rate' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.69999999999999996'>
              <calculation class='tableau' formula='0.69999999999999996' />
              <range granularity='0.10000000000000001' max='0.69999999999999996' min='0.5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column caption='Fatal Rate' datatype='real' name='[Calculation_97179238061780993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_7])/SUM([v_9])' />
            </column>
            <column caption='Fatal Rate 2' datatype='string' name='[Calculation_97179238062448643]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_97179238061780993]&lt;= [Parameters].[Parameter 1] THEN &quot;01 Low&quot; &#10;ELSEIF [Calculation_97179238061780993] &lt;= [Parameters].[Parameter 2] THEN &quot;02 Medium&quot; &#10;ELSE &quot;03 High&quot;&#10;END' />
            </column>
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_97179238062448643]' derivation='User' name='[usr:Calculation_97179238062448643:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
            <column caption='TotalVictims' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v_6:nk]' member='&quot;Military&quot;' />
              <groupfilter from='&quot;Religious&quot;' function='range' level='[none:v_6:nk]' to='&quot;Workplace&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dseact0pl027i1947yjw1dsk48v].[usr:Calculation_97179238062448643:nk]' />
              <text column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_9:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_5:nk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Histogram'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Count of Mentally Ill Cases with Number of Legal Weapons</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column aggregation='None' caption='NumWeapons (bin)' datatype='integer' name='[NumWeapons (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[v_10]' peg='0' size='1' />
            </column>
            <column-instance column='[v_10]' derivation='Count' name='[cnt:v_10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NumWeapons (bin)]' derivation='None' name='[none:NumWeapons (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column caption='NumWeapons' datatype='integer' name='[v_10]' role='measure' type='quantitative' />
            <column caption='MentalIllness' datatype='boolean' name='[v_11]' role='dimension' type='nominal' />
            <column caption='LegalWeapon' datatype='boolean' name='[v_12]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0dseact0pl027i1947yjw1dsk48v].[none:v_11:nk] * [federated.0dseact0pl027i1947yjw1dsk48v].[cnt:v_10:qk])</rows>
        <cols>([federated.0dseact0pl027i1947yjw1dsk48v].[none:v_12:nk] / [federated.0dseact0pl027i1947yjw1dsk48v].[none:NumWeapons (bin):ok])</cols>
        <show-full-range>
          <column>[federated.0dseact0pl027i1947yjw1dsk48v].[NumWeapons (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mass Shooting Cases during Years with over 35 Fatalities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_2 (LatLong)]' derivation='Avg' name='[avg:v_2 (LatLong):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_3 (LatLong)]' derivation='Avg' name='[avg:v_3 (LatLong):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_1]' derivation='None' name='[none:v_1:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='Sum' name='[sum:v_7:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[v_0]' role='dimension' type='nominal' />
            <column caption='Case' datatype='string' name='[v_1]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[v_2 (LatLong)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[v_3 (LatLong)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='City' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_0:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;1999&quot;' />
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;2007&quot;' />
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;2009&quot;' />
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;2012&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_0:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_3 (LatLong):qk]' field-type='quantitative' max='-9108322.2209319398' min='-16443788.798513096' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_2 (LatLong):qk]' field-type='quantitative' max='7754036.5538376924' min='2537887.3077413514' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]' />
              <text column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_4:nk]' />
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_5:nk]' />
              <lod column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_1:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_2 (LatLong):qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[avg:v_3 (LatLong):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Scatterplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Weapons vs Fatalities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;andyzhang/final-project&quot;' name='federated.0dseact0pl027i1947yjw1dsk48v' />
          </datasources>
          <datasource-dependencies datasource='federated.0dseact0pl027i1947yjw1dsk48v'>
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='Sum' name='[sum:v_10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_7]' derivation='Sum' name='[sum:v_7:qk]' pivot='key' type='quantitative' />
            <column caption='NumWeapons' datatype='integer' name='[v_10]' role='measure' type='quantitative' />
            <column caption='LocationType' datatype='string' name='[v_6]' role='dimension' type='nominal' />
            <column caption='Fatalities' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_10:qk]</rows>
        <cols>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Bar graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Barcharts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstabs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='163'>
            <card pane-specification-id='0' param='[federated.0dseact0pl027i1947yjw1dsk48v].[usr:Calculation_97179238062448643:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_5:nk]</field>
            <field>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</field>
            <field>[federated.0dseact0pl027i1947yjw1dsk48v].[usr:Calculation_97179238062448643:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_10:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</field>
                  <field>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_10:qk]</field>
                  <field>[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Workplace&quot;</value>
                <value>3</value>
                <value>15</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dseact0pl027i1947yjw1dsk48v].[none:v_6:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dseact0pl027i1947yjw1dsk48v].[sum:v_7:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar graph' width='192'>
      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
      tV0UGrWn6dYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Barcharts' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nO29d2xceZ7g93mhcmAViyzmHEVRIilRObc6TXfPdE/YndnZhe8OBgwDXqz/
      WcBn42AMzjjDsGHc+QwY3vWub3w7u5O2p7unc0utnCWKpESRYs6ximSxqljxBf9BSi2pJVHd
      YmpVfQAB4qtf/b7vvXrf9wvfJOi6rpMmTYoibvQJpEmzkaQVIE1Kk1aANClNWgHSpDRpBUiT
      0qQVIE1Kk1aANClNWgHSpDRpBUiT0qQVIE1Kk1aANClNWgHSpDRpBUiT0siPHtB1nbSDaJpU
      4WsKMDs7Szwe34hzSQMEg0GcTue6y9V1HU3TkCRp1fqMRCL4/X6Ki4uf2k5RFGT5a4/imqMo
      ytcVICsra91PJM1XqJpG20hkAyTrqKqKJH31SBxqKMZpNX3rHv1+P1NTUxQUFDy1XTwex2T6
      9nK+LfF4/OsK8HVUOm92UbSlBofF8MBxncDYGIo7lyyb4Ynf3qzomoqi6siyjCA8cFxNklRF
      jMbVexN+EzRN528/bNkQ2Y+ytSz7uRTgu8CKi+D47ABnLlzkzogPdA3/5Ch3u/sIRxVAQdVh
      YXaS7rtdzMyH0JQk/plJeu92MjkbZDMuJ6KBMd79zW/44we/49S12yTVOP29o2hAaOoO1/vn
      N/oU06wTK44APR39HHnrKD13Bghlw8nLN6gsymfK58IVHGFM9JLhHycYT9Jxp59jL+3h1Kef
      ULatgfYLF3nn+68jP/iK3Wh0lZYLV2l45R0qMg2c+uRT7nbEOPnZZbbs2EZtsZnOm+cZbY1T
      v/9VyjLinDt3mYScwcHDexgdHiDhH8dZdYDagvWfq6dZXVYYATS6eweYGplkcryPubhEhpBg
      dHoBm8OMrqoomkowvMDw2CQLsxMEFhUyK+vZ2dCI08LmGwF0jYW4neJsG6JkxJudjc3poaxi
      K/sP7MVhEnHnV/L2m7vp7xiiq7ONjOKtFLoVbnf00NVygYi9nLIc+0ZfSZpV4KkKoEbGSVqr
      2VJdy67aAsYn59l58CUaKz20XL8NCAhamN7BAEeOHKbQ40SDTfjUP4AgYBaDzC6q6LpGIDiH
      ZDJjEEVMFguSKJDlycFitSNrOvHYIpMTwwQSMrm5GVhy6zjaXINJTptQXgSeOgVKRDT2vrqf
      /CwrWU4Dg1MLDPTcwhdUadp9AJs6R5ktG2eNl5ZrN8kuryPb5cBQWowgiNRW1yJttudEkNm9
      t47f/MMvcWcZUazF7PF6GRXP8sHHn9NcnfHVW0HUKSwsobelHzVqwJOrbq7pXJrnRkjVtCia
      miSe1DGbjAgC6JqGqmpIBplHH3FNUdAQkdfhrT80PMJ/+zeX1lzOs/B//NXrlOa6vvX3/X4/
      XV1dHDp06KntNvk26IuJKBmwPLDTKYgisvj4B1yU5XXzGREFgVd3la+TtK/QdZYNYV9dqcNi
      XPfzWG9SVgE2K6Io8N/8cPe6y9U0DUVRMBpf/If+QTbbDD1NmnUlPQJsMlRN5xf/6cy6y9V1
      0HUN8QnTwG9DJLSAb3KEL/vUp7bTtNWV+6xompaaCqApCebmF9BFA26XE3l53qtrCv65INlZ
      mc/Uz8L8PEabA4tx9W6jruu09k6tWn8bSTwSIuyfZU7YvNeTclMgXVe5ef4LLt28xdVLl5gJ
      x9FUlXg8jhIPc77lNol4nERSQdd1lGSCWDyOqi25iScTceLxBLqu09N+m7nARjiupVktUm8E
      0DUC00E8NbXsaahAFhUufPQBA4E4lVvriU528u5Hs4SCGj//8RE+/ePHJBHJKGviQJmB9z6/
      gqwm2PbaTxFFCdJ2ge80KacAgijz0k9+yPUL5/l///4sL7+8l0mpmD//852QCOGfDfDW8YNc
      +OxLhm61kbPjOIdqMvnkgy9pm0+y9/s/ozYjxD9/eIMSj3mjLyfNc5JyCqBrGv7ZIM1HXiHX
      cpLR+QRaMkRSUREUBfSleaGgC5gsMtFgBCVpI67oZDtFIuEYCXkBTTQikJI2xBeKlFMA0PEP
      dXL24nkMRgeHj9aQoV3n/ff+QEX9NvKzlxbAmblZ5NaUMn72FO99kKRi215q82VOnfyUvqTM
      gdfeIjY1iNmUgrfwBSI1XSHuxT0LAoIgADqapiOI4tfcIHRNQ9U0JHnJRUJTVXQEROnrbVeD
      zeQK8bws7QKN4ymu3ehTeSKpqQCbmNHRUabC6785p6OjKuqqxuYGAvMM9ffSuPPplu2kksQg
      r39UYVJJpuIUaHMjCAK7tjw9hnYtWAtXCL/fhFmZX/F60s5waR4iqTzdcnoPWRKXp3DfbTbq
      GgRBSCvAZkNRNX7yP/7+mdr+zV+/RW7mdz8ybSPcIO7JTTkF0NQkfUNjVFeUsTA9wlTcSk2x
      h+nhIWz5JdgNX/8xYoFpBucVtpQ9figfuduOvaSeTMvGZJLY9Oga4323aLs7gtGVx6F9OzDL
      Ev7JPgbnDDTVLN1XPRHk1JcXiKoadc0HyLUkuHblOouqge279+NmgQvX21F0K7v27yXp66O9
      exiDxcuhI7uY7m3jTt8o9ux8djdupav1OhP+BfIqt7KztoArp77EF1EprdtJWabA1cvXU88V
      QkCj60YbixrcvXODK5euEUsu0nKjh3hkntYb1+kf94MWx+8PMtLfz8yMj6n5AEoixuTUDL6p
      MTraWugZmUbTYW5mnHA8wUh/FzdvtrEQTQIaI72d3OrsIxaPM3C3g7bbPSS0jb4DG4EORic7
      9+7HNd9D6/AcyYiPLz/5nPa+0futNFWldEsDuxqrOP3FCRY1gdLaRhprizn35WkSCY26hma2
      FYl8duI6umihadcevAxw5uooRpuLXXv3k5jpo2NwnMy8Uvbs3kHH+RP44wqZRbXs29NMz8UT
      +GNQuqUxBRVANFLrFeiZiRBOyBRl6UyPjKO4bNw4cx7FaKXt5CdMRwK8+0+/5kb3KKIoImhJ
      2s6fZHwuwqXzp9DNDjovn2NiLoyAgK4kCYbjmMQYp89dY7TzCi3dM6AmGOxu4+5oADU4wNVb
      Qxt9C9YfQSI338tQRysX+mYo8li5eeEyxTv34LZ+teiWLG7E6DSnPj2Nt6iKTFcmSmiGs6dP
      4iqpJjO/kMhEH59fuEVZTTE5eV7Gu1s51eGjrtZLlttO163rdA+EKczLx2FIcO3iBWJyDhkm
      Gy6LyuXTn7DoLCTPm0VyYSr1FABBoHhrBYM3W4hqeXjtLgZ6Rslxmoibc2jeXseeGg+jgQTW
      zDLeePUQbruZ/ptn6Q6ZaKjJR3Dms7WmirriXEKxGABKMsbw8CA9g+PMzfsZGFlgz8HdbN9W
      hx7zM+2bZmwuRCQyt8E3YGMQBJnM7FyqCt1032nlZucY2mKA4e4efMGvHAqtDheVW6pZ9E0S
      U8HmcFFZU4tvahIQsLkyqakpYWp8Gl2UcWXnUV3iYXjUhyibyM4pIN9jYmY+hNFip6CkDKuy
      QCChYTLZKK7cghBbIBRVsTlcKagAgCmznNm2z/FUl1OU7+H24ADZuYVo0QkGx6foGJsl2yaT
      mZGJUZZA1ymp30OOEOJWzxR6IopvZpq+sSlsJhMIAsH5KRSDm90NWzHJIrkuM3fu9jMxNYVg
      cODNL2J7fRMVhfkbffnrjq4mGRgYwpaVTWl+BgHVxStvHMdlNWN22hF1lYHefqaH+lhIGigo
      KYHoHDOTY4Q0mbzCYuKROUb7e1FNTsqKi0n45+jrH8GS4aGsKJeFmTk6O/txZWaT67EyNTbM
      6NQCOXl5ZBhiBAM+hudieAtKsEgRxkeGWNSNqbcIBhAkKy+9/SfklLiwCRZePn6UvLxcsvY3
      03Knk+y6Q5RkuBAaDAiAMSOb+upMPDvr6R+YQE2EuNN1l+KG/RR4HDiqtiE7MhAWAgxOhdiz
      ewcVBVnEb7QwOKKybcsOEj0dDI9NU1mXs9GXv/4IIkIiSsetYQRzAa/v24LNIKEli7Bmh3Hb
      jPgGw2RXeLl94zZJRaP5+Ot4TDFutHaSECRePn4cm+Ln5p0OFE3m+Bv7iU72cefWILIxg2NH
      tzJy5xq32tuwukvZV1dOV0c7w8NR8ne9THmmjfO3bjE+rFPReIRip05La2faEvxN0TWFlvZO
      djZuW5P962/iCrGa26BrYwh7tqwQmyo7dJqnI4gyzU3b16x/WRL54H/+2Zr1vxnRtI3ZGtM0
      7esjgM/nS9cH2EBCoRAOh2Pd5a5FfQBN05bibld4uz9tBEgmk0xPT1NYWLhq5/WQ3EcPZmdn
      r7qgNM/O6Ogow/PrPyvV0VFV7X589OogABKsEDehKBqy/Pg20UicO7cHUG3P7x+1v77woWnr
      M/gCaYz297CYBJPVRVFBJmPDMxSVF/Kk90R0McBCGHJzvn1GsfVgyc1ZR5Kkh+sDaAqKJmCQ
      N8aqq2o6/+uvXwx36NVAScSYH+/l1ODzK+b7/+6nXzu2Qq9Jrp+/TjyRoO3qeQbGp+hs60fV
      NRbmfIyNjRNJKKCrzM5MMuWbIzA7ycDQHLqaYCEU2ZR5cuNhHx+/+zvef+93XLrVi6omGBuZ
      QgPC03e5ORDY6FNMs06sMAIIyAYzGU4buqAhShKiKKIpSe523CauJmi9O8b2fJmrneN4vVkU
      5bsRUGi/eIpY9nb21FrX50qeFV2l9fxZSvd/j7ocE59/+Al3pSAnPr1M3Y7tVBcZ6Wq/ynBr
      lKbDr1DsSHLh/EXihkwOHtjJxPgY6twEhsImqvPT9QG+66ygADrR8BwDQyOoyaXIKVhKhKDp
      Cv6FRfzz85g0F/uPHqcwy4ZvtIMTl8/iLN7Czw9vQqOPrjEXddBUsJQFuiAvF4vVRXFJNbv3
      7EDx38Ho9PLGrgxOXuojmOkno2Q75kg/bbe6Ges8T0bFQY5n2zb6StKsAitMgXRc3lIOHjxM
      ZV4GgWAQ0AkHxhkPmXj79Zfx2I0YRIW50CLJeAxFk6jZ1ogaGmEylFyXi/hGCAKSHiK8fGqL
      iwuIRhNGgxGr3Y4sCuTnFWN3ZGDQIBYN0NPVzuBMhEyPFWt+PW8ebsJsSHt+vgisoAAGrKYw
      H/3xA/xiJlvLSymtKsThzMUrzfHB55corq5l7579jHde4otzl8Dqpry6ip/95FX6+7rRNt0i
      QGLPrgo++Idf8/nn7zG4aCAnJ4cMpjhx+gILcf2rmyJo5OYWIQggCTKaKiALKek98sLyrS3B
      9752b1vp0b83M7qusxicJ5LQcGa4MBtlErEIi9EENocVkDFKEE+oGAwi4VAQRZew263oqobJ
      tHYZlF+koPjV4N4uUHbZtufu6/1/99Nvug36ZB590L8LD/49BEHAnpHJg04ERrMVo/nhBbvJ
      tPS2d2a4vzq4xrZzQRDYvQExweg6mq5vWJLaJ8lNxCKMSvNUrNE9SfsCbTLGxsbWxOq5EhtZ
      H+BpQfGhUIirV6/y8ssvr4nc9IQ2TUqTdobbZGiazr//3ZUNkLyUHGy1p0A/OlxLyXPUGVtr
      Uk4BHnT60jUNTQdJEtBUbSkz3GPWMmoizmJCw2m3PLbPSHAB2erEKD//OkjTdc60DT13P5uF
      o00lq6oAuq6jqCry8u+nLnuSSrKMuJzlT1UUNB0EQUSSpadm8Eu5KZCuRPnndz9GBe5c+JBf
      vn8JFYULH3/CbOIJDln+EW7c7X9in903zzEdebZcPmmej6nOS/zb//3/Ymo+xo3P/pG/+9Vv
      +cP7HzAfW/7t9Cj/8B//A7/53e/54vztFdMXp9wIIMgmSsxxxhZV/EnINfmZ98/gE92Mt3zJ
      R31TCAYXP/vJfk5+dJ350AIN26sRRRNTfa10Tgtos3cIJGTCSQs/fPt1RFFGjYU4ee40s6EI
      BXX72VFs4I/vnwZXNnsbK7l26QpJTWD3K+9Qlfvdz+WzISQX+LR1mH07q1G1BBMzSXYfeInq
      wnzs5qV3uRbxk3SUceTwAQpyvSu+4VNuBBAEkZraXLo6h4iE7WRnZDDSPYInU2RwVubPfv5n
      7PEmuOuP0jfi46U3v0dpjhPfYDsX2sdo3lHDosHDD975CTvz7UwGQgCIspGcwmLy83Po7bxN
      +412Gl99ix+/9TKR2UEMmcWUlXnouHVrg+/AdxNd17jwh99R2XQAORElGk1S29RAeLyf3/7N
      3zMaXDbtyxlsr8+np+MK/+n3nxJfIdYm5RQABJwltUxf+QhDfhWFHje3+gbJcWehkQRBREFH
      RKCivJZcjxMRkGTjcrkkBQEJWRKJxWPL806YmxmkdyxASVExVrOEqMvoLJU9RQfJZMaTU0pD
      3frXAH4h0AGHh8DgbTq77tIzMIa7sJJDR16iscpI/1SYaCSCoghU1zfy8suvkKuGia4wB0q5
      KRCAaMgky22lpjoHr2TCcncIb3EJemSM9957F8Hg4B2PhaDbsdzeRFntDgrMCVpvdqIEx3j3
      3XcxWrxszcxgMiMT2elCXGznRtsidreXbQ3FfPbFCbqdWeyor0Qdu8mtgETV9j0bfPXfTQRR
      5OAbPwLgVmE2uUUldF07xWczQTB5+VGZk6uffkzDviZOnThNKJEkp2w7jhVe8WlD2IPoOoqS
      RJCMPCkwSlcTfHr6Iq8eO4z0yK6RpqogCPe3EvXlOgSiKD6w4/T0X+RFc4X4xb86QlNV3lPb
      fGtDmK6jqiqiJD8S1KSh6svBTivITckR4IkIArJhBUuoaODo/r1fe/gBxEfiaYX7BTiW3mDP
      4j8qigJ/+cNd3+SsVwUdUJe3F1eTYm/Gqvb3EIKA9JhYYuEbJL1NB8VvMtYjKP5xjotrERT/
      rDwtKD6RSDA5OUlJScmayE1PgTYZ6+ELNDAwQDAYpLGx8f6xzeoLtNZy01OgTYaqavz83767
      pjLC8zMk4xHcuUvGvb/+2X4aK1MwYx0r7gIlOH/yOvuOH+BRK7+aDDAwGKWyOo+5oX5mZRfV
      hZ61O9NVRNcVem+1MhtVKK3eRp7bSiyWwGQxE1+YYDLioCxv/XPzwNJcfDG2tpF0kXgSJa5g
      XJajblBiqs3AimlRoouLy+Zkjc5rF+gcmsZTtIU8aZSPLk6we66Z7cUONE2n/+ZZOobniClw
      /K0fMNF2kq6Rebzl2zi0sw5Z3AQxA7rO4M0z9ARdbC12cvH0aQ4cbOTSmVvs2LsdqzpBx7iD
      WECmsKwMu0FnbGQERbJTVJjNYiSKEAuhmDPJtK//sJ1mdflGU6CM7Dy22p1cvdbHzncaqPF5
      2d20hdjYHfwJGUdgnormI5hGLjE+O83toTg//tHbnDrxGf5gBbmuzVBZXaF3OM6xd5qxiTA/
      4WNu2s+s38fsfACDTWOwv5NszcqgT6fGM0/PRBw5OUcotoOB2xeIJU0cfOUNXoDqRCnPs1mC
      dR01OseVax0EozEERCSDEdAxGY2wvNsqGkw4nA4MBgPoCaxWDyajCYfJgKpukmFWB+XBZb8o
      YnNnUVRUSUPjNuwmie07j7B3fzN6IMz09CgLoSDBaAT/3DRJwczrb/+QQs8mS/eS5luxwggg
      Mjt+l/ffDVJWV4cWizE2MEQwJiGZMolNf8yXVySavDJmg4wkyUgCIBsxmrMxRc7z7nuTKIKb
      ZudmePsDgkR5doyrbcPsqbLSNzbJsfoGxPg8gcUYkg5fZfPSkY02iiurKc82o2o6LcEornQt
      sBeGb7QNqqkKigpG45Le6KqKioD0xKrpOtFoArPZuKlihnUtwdUzXzARUtnefIjKgkzGe9u5
      NeCjsakWBTdFHugbDFGcb+bS5auEkzKNO5uIhcJUlhev2bmthyV4MTCDEo+SkbO0t/5v/otD
      7KzOS2+DroQoLWVLuIcgSSt0IGCxbL6FoiAa2XPszXt/AZBfuZ38SkAQ7itzZeVS8qsjL726
      1FIQIDtzfU82zZqSNoRtMkZHx3C4s9ZUxvDQEKFQkPptS3UObGYDkiikR4A0G48ggMu+tuul
      OasRXTE+JGejilRsNGkF2GTous6dwZk16TvX48DjfHxcs/CAF2sqkVaAZ+BeLQH5CTUDVEVB
      kKT7wTHPg6rp/A//z6nn7udx/Fff38Gb+6rXpO/vKimn8loyzpXrrejAVF87F9oG0dHoa2sl
      8IQy7tG5cdp7h5/YZ/+tq/gj38UphE54bpqP3/+AQX+UZHCCX/3qV/zqV//AL3/7IYGIstEn
      uOak3AggSCJzg4MEdzTSP9zPsF+iqdbNnf5Z9ueP8tGlFrIqm9hT52VwKMjCzDAWm4VQ0kA8
      ssDg2CxGLczAwBCmvFr2NVQRDQcxJ6K0dbQw6luk+eAxcp0y7ZfPM520sb95K103L+OLWTj2
      0gGsq5A+ZXXQGO3rIzgzwkQgTnFZPn/2s5+hhsb49fu3MRlffHtHyo0AgihTX2TkzmiQSNRA
      sdfMRN8ohiwz50+1sOPwcRZaTzEUDPLPv/4nZrHhdVnR1QjnP/kELA7aOm7TcPA4iaFbDM8s
      AKBrkF1Qxf6d1Zz98ix3r51kSshhR10pw90tRCzFNJRKnLt8Z4PvwINIbNl9gOryrPtlvCRZ
      5vrpa2w/tg/LplHUtSPlFAAE8rZuYezKGWKmMnIcLnr6Rshz2DF48snLdLKtJg9/KElV3X6O
      7qnHZJDovXaGSTmLqvwMZLsXj8NKUW4OCXVpmhAN+zl9+iQXrt8hQZLpeZGm+jKyvTmIaoje
      u21c65ogw73+24wr8eBjrsf99M6J1Bakhr0jBRUAJFshwf6rFNUVU1ScRc/YKFlFJZgSw5y+
      dIVT3T7K3CaMsmFpYavrVO1+hW2ZOicudqIuznLt6hVu9k3isdsQBJFkLIrRZCM7w46mClSX
      ZnLm5Fmu3GhFtHhxOux4s7KxGDaJSwiAnqSrrYWO3kE6268xPhum9fRpao4dxWxIjUcjJQ1h
      uq6zMOvD6s7CIKjMBUJkuNyosSATUz7MzmzyPDaCoSQOpwU9GSeq6JgNIoHAAmcvXaRpeyMO
      p4dMt4NEJIRoNDE3NUlSMGB3OnA5rPgmp4gj481yszA7QyQJnmwvDsuTR4G1dIW4twt0PyKs
      YRv+6WkW40lAwJmZhZCMY3O5MKyj63raELbOCIKAK8u7/JeIJ3NpuJetGZSVfxXE7XQu3R7B
      YMJmWDqWmZlJ4/YdlJYU3fdvMtuWgmdyix6OW/Xmf5XT3pv3bGGOggDVRWsTWOR6NLepIJGV
      m08WSy8FVVWRHanl5ZqSI8BmZmxsjKystXWFGBsbIxwOU1tbe//YfQVYoar7WpBIJDbEBSOR
      SKQVYLMxOjqK2bzyOmFubo5wOExx8ep5pqqquumyQqy53NXo6En1wu6xmVyhV2Kja53pOnx0
      Y3zFdrMzk+ytziQ7O3tV5KazQjwWleunzlO9/wAZZgMB3widI1Gaaj0MTEfYuuwXH/X10z4t
      s29bKQDTvdeYtWxB9w9RXr8V6yMlRTUlya1r55hcSIDs5NCh3djNhsefgq4QXkxgs1ufmuXr
      2dGZ6e9kSnGyrboIQY9x7VoHZVtqmBkfpqyqho6OTnZvr6Ste5z6mlKicQ2HdX12bzRd5/3z
      d1dsF1nw01SaLtT9vKygAApdLRcIuMp5eUcR/TevcHvCQUN9Hi6rCOgM3L3FYE8n09Y6dlUv
      0tXZyUBXG66mCvSxGYrr6vCP99M95KOqfjveDCuamqCtb4qf/PgdQMAi6/R13WImkKC2vh6b
      GKXt5m0ceRXkWBd478Nb7DrQSGVFCYNdt4gbM9lRX0Vg1k90wY9uz0KNBJmemiYjt4LqUu9T
      rklnorefc36NmooComP93Lx1hwxvPk67C6OgMjnlg4Ya3HYnUz1X+fC6j/3N26kqzebunbsk
      pQyam2oIzc0SCwdYUAx4Mj1kuSxMT/nJzstZt/1lLRHm5IkTTM0GmR4c4PC//Gv2lGxMRovv
      IisWys6v3E58uJPFkI/xmIt8t51YyE9fv5/pOxe5ORQmJ8uFJOq0nzuBP2HG47Qs5WoUBPS4
      jzOX75LrtXL+7GUS2pLhRQ37ab/VTkf3IMlEjLgm47aonLrUQufZ06jufJRYGIPBhMFkwZnh
      ZPj2JWaSNrSJO7SOhDj93t9x/vYwkhrkzJUb2N0u2q61sKIHi2agLsvIyEKMvtEZykpK0JNx
      OtsHUGH5BIN0dExgttqw2hy4M+yo8Qiy1QVT7VwZWODSJ//Alze6kdUw5y+3EouEOH+1dZVG
      qmdDNNp55Y13+NmPvk9uQS3bC9OR+t+EFV9UmmzGnSFxt7UHb1kBBlhOJKlzt8/PgSO7Kcrz
      IhFjcsFAc3M9eVku7rmXq9F5Juf8dPUOoSphEvrS10Wrk8L8AgpysxGUOIN379DTN0AgGKOw
      ppKhW9eZnF/E4nThycyhqCiHqd5BxoYHGJuLEp0NYMsq43uvHSfLbiAzfwtbqsrIMFhYqVaL
      jkr1ziq6W7qYm0uQneVY8gR4VHMUyHB58HjzKS7IJRGcpbO9lan5eRYCUSzuQl577RXKK6vJ
      Ume53dePM7t0XRUAlrZOx7tv4aluxCJ9d9Zbm4GVkkcj6AKVJTlc6eqhOM/L0uO79C8/y8Kd
      O30Mj06Q1A04TXF6egYYmZhlqaC6jmR24na5KK+qpaay8n6CLU1T0QBFSRKenSKRkcvW2nJM
      skpCsrF33278Qz1EVQNCZILhcR9ZpQXkFhSwtaGO0qJMDBYbhnvZlu8tvIWVvTIFBOSMcrSx
      c6jeMuz3lh/L373/CAkagmwi6htnbHIG3/gwWbVNlBVkAAKy2YrBICGIBqrrS7n0xSXqtlU+
      251fRZRogOsdU+zdk3Z1/qZIv/jFL37x5I9F7E4H2QX5ZHtzyMvx4nTZyXC7cGQ4KKosZWFy
      nKTkoKqqgqqKAqYnJjFnFlBVVkh2VgZOdy55GTJTM/PY3DnkZDoQRQm3zcjsfIhoXCOvpAQh
      skAoKVFdVYlDVhkZm6ZkSz0F3mycdhHf/CIVddvQAlOEEpBfUIjH5cThcCBKBgGhY2UAABku
      SURBVJx2Ow6bBbvTgcNpe6pmmx1O7A4n2bk5lJYW43TYcTidZGa5cTjtuOwOHI4M7E4HTk8m
      NjHGbDBBcWUlgalxjBn5VJYWkpPlwmF3Igo6icUw80mZ3durnmsECCws8FnL6IrtkvEIB7fm
      UV5ajG+0n4DRw7ayp6chfxobmRx3o+wPqqqm7QCrgZZY5MbV63irmijNfb504M/qChFZ8POv
      /7SJ40cOPJe8e6S3QdN8a0Sjjd2Hjq5OX4LAX7yybcV2/plJzMb0z/e8pOsDbDJCoRBut3vF
      doFAgMXFRQoKClZs+yxs1voAay03PQXaZIyNjZGTs/6pynVdJ5FIcO7cOY4fP76uAfIb6Qu0
      YWOormvoiGxUwmhN05bqeT1UXEonnkhiMj3bj5FMJBBlGWkVHxZV0/ir//OLVevvm6BrKjlM
      8dpr8rqOBJqmLeWTXWc0TVtJAZL87v/+Jft++ufkG8Nc6wuxr6HioRaTo6O4vXmYDQo32ruo
      b2jCvJJ5TVdpPX0Cn1zAK4fqv3E2hfnBdiaN5dQVfAuLp64x3tvO+dY+dNHES6+/So5jyc1B
      Sy5y9nonrx7c/UxddbW14a2oI9ezesYnXYcJf2jV+vtGsjUNh2O5ZkAyyuDAIJGkSEl5OU6z
      zPTEKCZ3Pm7b+j+sa8WK9QFkSeXy5Ta+f6CQ2YVFQv4Rzl5sRRXtHH91D5+++884iivYuW83
      VoODiG+IkZiNqiI3t2914nUZuXKzA1d+NQd2bcMgCaiJKCOLCXSln7hSR2Cij87uARZCSdyZ
      VnwzQQ5+7y2k2V4u3ewkq7iOqgIHs/4FRifm2b2zGDmuEw1McebsJeTMYurL3Ny4cRvRnMnR
      l/bRff0sk/4FDJ5Sju7bgVG656in0HKtk72vfZ9cm4hglBnuvElL1xAVW7cRmBzik4+nUAzZ
      vH60ibbL5xjxL1LXvJ8Kj4GzZ84STBo48tqrJGNJVO3FnEGO9XYzMBHEIoQ4OTXPDrfChx+f
      oPj7f8k7TU9zNflusaIrhCOnnCxxisGZAACy0cqWbQ0UmnxcG4hTVlXLnn37Kcg0MdQ3hSCK
      3O3uJBEcpn8syvUr19m2+yBJ3wBj/ggAkflRBEMe2ZLO2EKM2alp7N5qGmq9JMUsjjR5uTs4
      z6VLN9i5/zDh8R56+/v48vJtahvrMcR9jPqjXL14hZKGA+yqr8BssVPf2IRLn6BtMMDY2BT7
      jn8PQ2iUxQfSnQiigQOHdnLx4w84caGFeHiay7dnOPzScYqzHYgGI80Hj2OM+JnoaWUCD68e
      a6b16jXutl3CXN7M8Z35nDjTxncxEcqzUlLXyPGje7BLKmaziaLte/mTNxpR1BdL4VecvOo6
      7G5u5FZLB6oOEz1t3Gi7QyihoidUTAYDRqsVkywhIGLPzEYOB2m7fJvaffXMTUzTc6cDVcrA
      Zlya+/e3dRBaGGc6tkBL6wAaRrweNxazA09GJmaLCQGF2fFpum7fBqMbs2zm6OEjlOZm3jfV
      xkQDBdluMlwuJu620Hqrk0hCQ0+qmNxZOK0WTEbDQ1Hfug6uwip+/i/+gjJTgPb+cYyeXDwu
      Jxl2K0abB6/Tis1oY2F2AW9OLg5XFtmyhs8fIS8vB1dBOZZo4Gtu3y8SuhLhs9//loGoi+N7
      m5ANBl7Ey11hCiQgSiImTzlVmVe5MReh1pQkqqlMT0+RVSJQ4DFy8vPP2HOgGUQNJAuNNQ7+
      7ryff/M9G6GGckZDIYxGM5Iko8ZD9C86+LOfvo6Ewoe/f49FSwEOARBhaT0pIAoG6raXMhUL
      YzBYkGXbQ2sFEajIs/LuH/9IQa4Xu5YgkhSJBqYprRTua7YoPKLjWpLLJz7Gp8jEZhdofmUv
      CyMn+e27A5TXVH71RhA1CrbU8sXHJ5npMCE4K9hXJfHpB7+jXYxTuOv7SP4e7ucTecHovHoO
      pWgH7+zbcn+jQkBF1VbytPpuscI2qI6qaoiihK6raLqAiEY0GkU2mZElGRGdWCyGbDIhslws
      WlOJKypmoxFNU4lHowgGI6bllf6D+82qunRDBVFE0HV0BARBR9MFBDRi0SiSwYRBlgABURTQ
      dW3pXASdeDyGIBmQBYjG4hhNJiRJBl27X6FdeKCo9dJ+t0oykUSQZYyyjK4pxBNJDEYTAiCJ
      Iqq29H0lESeWSGK1LSlgIrpIUhexWS1f63s12MhK8bqmUeOY53/51/81/R2XuXprCEGAvOpG
      spMz3BoYRUWipvkoe7YUrprT3ya2BAv3H1RBkJbfjiI2u+OhNhbrI4HUooR5OauYKEpYbA/v
      kjy4xfbQdtv93PzCUqUZJKy2r++wCIK4/LmA2fyVbLv9wd2J5fN+TPV2SZKRLF9duiAZsFge
      3tm4d14GkxmD6atgGJPVjun+917czGnVDQepbjj40LHtq+N1san4mgIsLi6STK5tmc40T0ZJ
      JvmPf/X6usvVdZ1EMkHbtY0ZfTaKr02BIpHI/WlJmvXH5/NtiFX0nitEIBAgMzNzXWOiH3WF
      WFhYwG63r7kx7rFB8dZHpzNp1pVAIIBg2oBYX11HVxSy8lf2Q1p10UIC4QGl7+lv5+Vjh3E4
      1ja085m8QdVkgmBwAdFowWGzIQg6ui4gCBCYD+Byu75TWR9AR0nEUXQJk9GAgEYkGsNoMqEk
      kxiNRubm5snyuInGk5hNRjRdX1V3h6ehajp/+e8/WRdZm5U8cYaXjx1+7GernbXj6b+qrnPu
      w99w/uoNPv/4PVr7J5n3jdLbO4WuKZy7do2koqFpGrqu3x9G7/3/wb83E52nPuTv3z2Jqusk
      QxP8zd/8kp6RGXr7eogrCc5dawEtQmffIMriFFc7hu9fh6Zpj1yjhrb8f+4d2+gLfIHQlRgX
      z52kf3qR8e7r/ON//v/4zXufMre4Oh7LTx8BFB/zQilvf+8wRKf48NM7BOVJbo0nmQnvRp8f
      4nd/eJfoosY7P36LnisnGPJHMGSW8tYOJx+cHSAhmPjTt1/BsmlyzeuoOHEbEgTjCr6uEUpL
      SpGSCfy+KFLt0jYoepygP0lP6DpnL4+y4N9B85YsTpxuIRGKcOxnf874lY/onwiSU1KObPNw
      dEc5n564wutvvMRmudrvOkOdV7jb24vi2s62/FL+9C92MtXyJdc7h3htV81z9//0EUBNgOxA
      EEAyWjBIRqqamtm75wgHGquRM0v5yQ9/xM6aQhZ9I/T7k1RWlRMe7WAukWRBcPCzd17ZfJmG
      NYWd27O5eXeayfl5cvKz0XSNSCD21dtbV4kEE1TVbad+5xFeO7oHp91NcW4WOW6F233zBGen
      2ff6Oxw/0MTiUD/jfh+qaE4//KtEZHaMK11BXj3SgIpAZqaVMx/8nl+duklVSf6qyHj6k2nM
      IDZ3l2hCxT8+SNxiwqCzZHwSBITlItkiIoIogmQgK7eAA0eOYBV1ysrrMBmkTbhG0HGUbmOx
      /QRBPYfM5crvjztLQRBRk0kQRUY7rqFlV1BXVYio69i8JWRnOpFMDrZUuzj52RlK61aO5krz
      bPTcvMBiPMaN623cvnkLVTDTfOgYr+6ppaNv5ex5z8LTp0Cig90NBXz0we8RZAsHDr9EhjFJ
      qOUE59rA6/EgIuBwu7Bk5NFYPsX1a9exOrzkNefgdW6+YhAgkOHNxSTZKCj3YKuswBH3oxos
      eHLdiIJIricTBCNZXgeSLZuMWAufnwhTV5rH8M0bzEtRChrNmMWs5TTiAnlFZdAyTk1hOinV
      alGz93VywlECY61okSK6224QkyxEFRXNtDquiM8UEaYoSQRRRlp2CtE1DX3ZLeEhdH3ZhUBi
      0730n4N7C15REFBVFVGWHxottGSUlvNnSWZWsr/x+dKibKQrxGYhT5zhf/vv/tX9bdBENEBY
      saCFphidnkWXrVRXV2A3PV9cwjMHxcvyw4IEUXy8H4ggbEhM6VojCML9aZz0mNhVQTJQ03wA
      2yrsWwuA12177n6+FbrORry5dF1/aJpsiz/8vBktLjIBHCVk5T9cg+F5SQfFbzJCoRBVVVXr
      LlfXdRRF2ZDQxEdjgs+ePUtzczM229q+CNL1ATYho6OjG5IhIVWzQnw7qbpGNBrHYrWs3DbN
      N0IHrvQF1l+uDpqqIskboQAq8kbJfVqDxbGbnB3z8L3dXv7z3/6K/W//CV4pRHvPGIFYgh+8
      fGSpoRbhWlsPDVsr6B6eZXt16Tqc/rdH15PcuX4VfyRJxdadFGXZiUbjmK0WYoFRxhYzqCrY
      mNz7mqbzy0/bN0R2KvJUBbDmlhG9fJVwaQyDy4F/fg6j4EOyZBEbu8Qf3p8lplh55619CKqR
      yd5WPv6sjZFtDezdXsiXp6+jGx289uYruJ9SGXFd0TV6r55kTCukocrGpbOnEPY3cP5kG017
      t5Mh+ekcnSM8I1JWU4vTqDHY10dSdlJZlk8wHEaILqBYvGRnbKKSp2m+FU81hAmyC6MUpb9v
      hu1NdcyP+pgZ9ZFX4sVgz+LlV9+kwCYQiSwyMxEkt7Sa2m3NvHJ0N+1XrlG4vYkCU4juifUf
      0p+IrjIwoXN47zbyCsopz3UTmg8SiURIKAqarjE2OoiQmObC1T76O1sYmA4yNdBKR88wZz7/
      gM/P3UR5QbNBpBorpkfPtlvpnJ7Fm1OGPTJC95yZfKcB0WDFaTVhlE3oLG3fiaKEKEoYjQaS
      ySTRcAhTdimFG7Wt9wQ0Xbuf0UFDx+LMJD+/hC11NdiMElsbD9C4YztCKILPN4bfP8NsOMxC
      eA7N6ODNt79Pnju9/nkRWNFJp7rCQzwp4rDbyc6zYfBmYhIFbOalwECjxYQkSpitRkSTHUto
      mA8+Pk1twzYmuwcYGRonoWyit6UgUZmvcfFqN7O+Ufom/DhcLuTEHNNzCygaCPc3xnRMFicF
      pVU079hLWZ4XozUTh+nFs3WkKqu+DbpUb1ZDlsXlyDIRSdpcznC6nqT10hmmQip1jXspzXUx
      NdhJ5/AsW+srUckg3w1Do2EKcsxcb7nJoiJTv62e+OIipcWrk5D2caQtwetL2g6wyUgrwPqS
      TjC/yRAFgbf2bYAlmOV0NeuYFfoeG1WgO10hZhMyNjZGYWHhustN1Qoxm2tynibNOpOeAj2C
      ruskl4PjNwJV0/jv//bLDZGt6xrCo6kk10Pucoa9p/HmvioObiteddkpqAA6Q60Xudo/jUEy
      sPPgUYqznV+5d2tJLly7yUv76rl6e4idDfX3S7sCzA22M2OqoDZ/bQpS6zp0DvnWpO/vMvvq
      1mZamJIKMD8R4OBbP8QZ7OHEpbt4jpRy+eIVJHcRh3ZtIRQOgyCQaXMjakk6W6/RMz5H2dYm
      ajwezAmBeMjH6TMXEJyFHGiuZno2QkWRl6HhCYqLc7lx7hSTYYmDRw/isaddJjYrKagAIIgK
      PV0daON3MLkb6bh+ifz6AyhD17k9srzHr4a52zWJTRmnfxYO7NhC69A4ZUaRgXkjAyPnKW06
      SqL/Km13VObDBioKPdy92Y3XHeP2uMzbL9chpyu3b2pSchEsaCCpIbrHQhzYXcr0wCjtVy/S
      P5PELij3WiEiEgwplFeX47BZkQzy/TummWwUZWVQUlJMQlOWfEEEEEUBKaOCxuIkH334OeP+
      8EZdZppnICVHACQTlQ37qXHb+OiD01TVljMREnBZZSw2y1dvBUGjoKyAz06co9ekE3cUAwZE
      IMuh8MXZM2jBaaobm/Hf6OD06Vk6R6c5uOjDHzaQ7TAyF4oAng271DRPJwXtADqJaAzRbEEW
      dELBECaTkVBgHlUy4na7SSbiWM1GIlEFLRqgq2+IaGCWiC2XV/duJaHJGEUVv9+HbrCR5Xay
      GJhnMaFitljJcJiZ98+h6AKZHg8G+dkH2rQl+PH8l2808YODz58I60FStFK8gNFiuf9/h3Mp
      8MWTk3e/hWH5c6tVIoENl8uJxeakoawMUTaxtKSV8OZ+5RPkzPTwYAiNx/viFJJ7kUnBEWBz
      Mzo6ylx8/QPTl5wY1Q2JzU0mkysG4+dnOch2ra5bfYqOAJsbQRBoqMxdd7mp6AoBqboI3uQs
      RhPrLlNbTouS3IDaKPFEEkVb/+3ieCKZugqgqSq6IN7PdgeArrEYiWGzPVuRkKUCfsblAn6r
      g6Jq/Px/+sOq9Zfm6aSeHUBX6bj8Bf/4+z/wT7/+PWOByP2PtESYzy/eeOaubl29xvTc4lqc
      ZZp1IuVGAF3XGBv0s635MFvLc5FEuHnmMzpGZ6ne3kh8ppffvjtDJG7mp28f5NSnnxKIKhTW
      72VnoYEPPzuLosDeN3+MJMqbMPN1mm9CyimAIMocfetVLpy/xG9aYhw/3ERf0MGf/OlLCMkw
      U5MlvHbsCJdPnGLkThvm8mb+dIuHjz+5wG2fxpZj71DnnOf90y2Uu1Lu9r1wpNwUSNd14rqB
      l974PvtKnAxMBxHkpaS+kiQiSiYsRhmDKKNrKgIikiQh6zq6piILEqIkI2o66WJI331S7xWm
      awy0X6LPHwFV5ODxKqTgBf753Xep3FqHy76012zLsJO3pYyBE6d4t0cnt2IH9cUyX3z5Pp0q
      NB5/G3Wq7xtZedNsPlLTEKbraMspuZfm8A/UNXi0qaaiqBqywYAAaIqCCsiP1AhYLdKuEOtL
      6o0AAIKA+NDiVUASH7+VKYgShgc+E2V5zeeNRsMG5R26l+EsheSm5giwiUkHxa+v3PQENk1K
      kx4BNhkjo6P0+5WVG64yus6yM9wG5OlPKsiGDSiQkfy2BTK+w+iqwsTMLAV5OSwGfASSJgqy
      HQRmZjBnejHLX5+MJkJzTIRUSvOzH9vn1FAv1rwKnKbnH1A1Tec//P7qc/eT5tlIuSmQritc
      PXeZmA53W8/zxemrJNQo1y7eZDEWZmhggOn5EOgKoVCU2elp5nzTDE7OoClJAoEgwcAco8OD
      TPoX0HSYGu5hIZbEPz3O4NAwkYQKaMxOjTMyPk0ymWRmYpTh0Sk2U57gNCm4CyRKRqrcGgNz
      cRaSMoUZMXwTk0RsDjrOnyZuduE/d4U3fvoyf/zNZxjcHvbUFyMA3TfOMWsoJDBwGVdhLWOD
      Nzj2xptLxbQTUfr7+kkmY3QNz7KrWOTUtVFyC7zEFia40zuJ0xhjZnE/u2rX3905zeNJuREA
      QaR8aym9bR1E4h6yHS6GukfxZhhYELJ45dghDtU46ZuNkxBd/OAHr5HjsjHYepa2KZU9jWVo
      zkL2793DjrJc5ha/cqaLRMJMzwWYGB+mq3uCA6++xJGDe1AXJwhGEyyqChPjgxt48WkeJfUU
      ALDkVDFz9QOclVUU52bS2tuH15tHPDJNMJpgaGYep1kiz5uPxSiDrpNf3YA1OsvARBBUFU1V
      GJ+awrQcQTU7PUhEzuJ7xw5hN8lkmERGpueJxaLogpmC8moOHTjGzrrnK6SdZnVJuSkQgCDZ
      2H3sZUrKM8kQLOzaHSOvsBC3IcLJT/6Iu7CJarcTvXrJPmOwu6mpdJDfvI32O0Mo4Une/+CP
      5Jc1UZztYjZWhdGVTXj0NCcvLrBl6xa2VxVw8cSXnBhxcGDXTvw3L3Pq3ADbdx/Y6MtP8wDp
      bdAH0e+5twlPLJiua0kuXm9n/+6dS6mAHmh471beO/bg349+9iTSrhDrS1oBviH3CkqLorgm
      sQDDI6P87tLoqve7Isv+UeIG1AfQVBVxA+oDaI+rD+Dz+YjH4+t+MmmWiMfjVFRUrLvcVHWF
      +NoaIDv78caeNOtDIrH+AfHAA56xGyN7o+Sm5C5QmjT3SCvAJmMjamVttOyNlJteBKdJadIj
      QJqUJq0Am5TBrpucOnUe30J0zWQo8UXarl/mzLlLTM4vomsJWi+e5syVNmLrkCJu3jfC7b4J
      QGd2tIcTJ04yMLWwpqkGQrNjXDh9ipb2LpK6llaAzUjc183l3nnKC51cPHud5Bo9EbNTk2D2
      UJZr4+Lla4y2nmFGyiFLn+FC+8iaPohKdI7zJ76kvXuERGSBM5faqN9ey7VTXxKOrVE8hBbj
      y5MXyauooTDHQ3R+Kq0Am5HQ1CRl23ZSWl2HXVlgcY00IKekkq1V+UyNDuPxZtE9FGZncx1b
      d2wnOjGDtiZSATQ6btwgt74Rt81ILDKP2VNGXk4hhR478URyTaQqoTHGfDG6O9rpn/ATmJ9L
      K8DmZNl1QoflyO01kaJEFzjx8efEHKUcaNqCiIam60tW4TWMUo/NDtN+dwIxscjE0BBz4RiC
      vqRuGqzdyKOpWDK8NO/eRWS6izF/NK0AmxFnXi4DHW2MDXYRFO3Y1ij30ODdNuIZ+Wwtzyca
      SVBV7KDtZg9drbex5Get2cMhW7PZf3gfFklEMhuxWNxE/EP456YY8wUxG9emPoLsLMChh0ko
      OoImkOHKTG+Dblb6bl2lb3KRpj17yXE9W7bqb8rMWA93escBcOSUsrM2nxvnTxMQsji4rwnL
      Gqdn0ZIRhqfDlBVm4xvu4nrHMNVNe6nId6/Z+DM72kdLRy/u4hp2bC1NK0Ca1CY9BUqT0qQV
      IE1Kk1aANClNWgHSpDRpBUiT0qQVIE1Kk1aANClNWgHSpDRpBUiT0qQVIE1Kk1aANClNWgHS
      pDRpBUiT0qQVIE1Kk1aANCnN/w/CtWLU80IubwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Boxplot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstabs' width='192'>
      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
      /fDrBOCYYOAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Histogram' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      Kt+MsZHljZ7lmWcAwPsGVoslPnh4P4o0BOss1ssVnLXgQsBZh0oqVFWFs7MzXLlyxSvEwZQK
      HFoujqHdteiHAZvdFk1Vw4SgOcY5+q7HrRduHg0SKzHGMWIsXWdqdcmPSZm967oD3SBXlkv7
      6T5Tym0e05TrP1NMkD6HUirGLKXi2zHwIAXk134uGIAxbxqtlI8KZEAMkWOM4XR9gvc//ADC
      WqwWyziT3b9/H6+99loUnwhTsnQJp6cn0Fqjqnyc0qC1j1B1PhjtGBGns2oa8Eb/TynW9Fz5
      tS8jNpTGk8/SpUhQ2m+MKcYVTYlfU8pqaTVMn905h77vsdlsjj5PjnzMzwUDAP7BT1dr7Nod
      nHNoqhq7roWzfhY5PTlFH5Rlay3efvtt3Lp1K87++bUIxwhqu92CCwGjDbQ2qOsaRmu0WkNr
      jeVyCcCHMy8Xi9E1L5ppcwLLxzJlHbnsu5qSwYG93lGSyVPin9Jtjo15ajzpMV3XYRiGg9X8
      sqCxbbv2+WEAWgWunl7B+WaDk/UJTAiPBYDlYoFF00Q58fbt2zGOnGbbkuhxjBmM9bFGZ+fn
      WC4XOPvwHIwB6/Uajx49DjOmRdu2WC2XRQWvZL0pEXc+hmMiROn/kp4zJdJ8FEtY6bgpEemy
      qwTF+nwc4ge8xa/TA6yzYLvdzn3W8wE+KkywDJXQti2c8zFAZ2dnBx8KGJsYSwpbSeksEU76
      EUv3ye+VIj1eaz1SWqeYI5XD6X9SJNPjp2Tw0vXz46bCKfrer6656JSe0/cDdu0OSkpYG4wR
      wpul+2HAcrnEdrtFXdcYhgHLxcLngoTQkmEYcO3qVUyh73ufKKMHdHoAZ/z5WQFSTBE/4BWs
      NISWcEyRTIkoP74009HvY+fl4kZJli9lZKWiR0khzs2mJSbN95WuM7Xy5Akt6YRQmvnT1VVV
      CpvtBl3fx20SEl3fQwkJow2qqoKUErtdi673YpBSElobVJUqMuHBc3IOJSUqWT1fDEAKXG7T
      TyGEQNM0RYsBYYqIppbky8i26bEXfsBwL2MttNFgbnx+6T6l8V0kuhwTtfIxfRSkjDv6mzFc
      v3btUjpWPZG4dJkxSS4gQ47IM+8IS+GcizZvrXU0bQ7DMDqu7/vICKmlpqTIpbNbuv3YGNK/
      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
    </thumbnail>
    <thumbnail height='192' name='Scatterplot' width='192'>
      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
      ZQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
